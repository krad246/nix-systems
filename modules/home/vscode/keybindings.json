[
  {
    "command": "workbench.action.files.openFolder",
    "key": "ctrl+shift+o",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "command": "-workbench.action.files.openFolder",
    "key": "ctrl+k ctrl+o",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+o",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "-inlineChat.acceptChanges",
    "key": "ctrl+enter",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "-workbench.action.terminal.chat.close",
    "key": "escape",
    "when": "terminalChatFocus && terminalChatVisible || terminalChatVisible && terminalFocus"
  },
  {
    "command": "-inlineChat.start",
    "key": "ctrl+i",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "command": "-inlineChat.focus",
    "key": "ctrl+down",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
  },
  {
    "command": "-inlineChat.focus",
    "key": "ctrl+up",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
  },
  {
    "command": "-inlineChat2.start",
    "key": "ctrl+i",
    "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput && !inlineChatHasSession"
  },
  {
    "command": "-workbench.action.terminal.chat.insertCommand",
    "key": "ctrl+alt+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "-workbench.action.terminal.chat.insertCommand",
    "key": "alt+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "-workbench.action.terminal.chat.insertFirstCommand",
    "key": "ctrl+alt+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "-workbench.action.terminal.chat.insertFirstCommand",
    "key": "alt+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "-inlineChat.moveToNextHunk",
    "key": "f7",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "-inlineChat.moveToPreviousHunk",
    "key": "shift+f7",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "-workbench.action.terminal.chat.runCommand",
    "key": "ctrl+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "-workbench.action.terminal.chat.runFirstCommand",
    "key": "ctrl+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "-inlineChat.startWithCurrentLine",
    "key": "ctrl+k i",
    "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
  },
  {
    "command": "-inlineChat.startWithCurrentLine",
    "key": "ctrl+i",
    "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
  },
  {
    "command": "-inlineChat2.stop",
    "key": "ctrl+i",
    "when": "inlineChatHasEditsAgent && inlineChatVisible && inlineChatHasSession == 'empty'"
  },
  {
    "command": "-inlineChat2.stop",
    "key": "escape",
    "when": "inlineChatHasEditsAgent && inlineChatVisible && inlineChatHasSession == 'empty'"
  },
  {
    "command": "-workbench.action.terminal.chat.start",
    "key": "ctrl+i",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "-inlineChat2.reveal",
    "key": "ctrl+i",
    "when": "inlineChatHasEditsAgent && inlineChatHasSession"
  },
  {
    "command": "-chatEditor.action.accept",
    "key": "ctrl+enter",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource"
  },
  {
    "command": "-chatEditor.action.acceptHunk",
    "key": "ctrl+shift+enter",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
  },
  {
    "command": "-workbench.action.chat.applyInEditor",
    "key": "ctrl+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "command": "-chatEditor.action.reject",
    "key": "ctrl+backspace",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource"
  },
  {
    "command": "-chatEditor.action.undoHunk",
    "key": "ctrl+shift+backspace",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
  },
  {
    "command": "-chatEditor.action.navigateNext",
    "key": "alt+f5",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "command": "-chatEditor.action.navigatePrevious",
    "key": "shift+alt+f5",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "command": "-workbench.action.chat.insertCodeBlock",
    "key": "ctrl+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "command": "-workbench.action.chat.runInTerminal",
    "key": "ctrl+alt+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.newChat",
    "key": "ctrl+l",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "command": "-workbench.action.chat.newEditSession",
    "key": "ctrl+l",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "command": "-workbench.action.chat.nextCodeBlock",
    "key": "ctrl+alt+pagedown",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.nextFileTree",
    "key": "ctrl+f9",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.open",
    "key": "ctrl+alt+i"
  },
  {
    "command": "-workbench.action.chat.openEditSession",
    "key": "ctrl+shift+i",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "command": "-workbench.action.chat.previousCodeBlock",
    "key": "ctrl+alt+pageup",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.previousFileTree",
    "key": "ctrl+shift+f9",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.startVoiceChat",
    "key": "ctrl+i",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
  },
  {
    "command": "-workbench.action.chat.stopListening",
    "key": "escape",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "key": "ctrl+i",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "command": "-workbench.action.speech.stopReadAloud",
    "key": "escape",
    "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
  },
  {
    "command": "-workbench.action.chat.toggleAgentMode",
    "key": "ctrl+.",
    "when": "chatHasToolsAgent && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
  },
  {
    "command": "-notebook.cell.detectLanguage",
    "key": "shift+alt+d",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "command": "-notebook.addFindMatchToSelection",
    "key": "ctrl+d",
    "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.cell.cursorPageDown",
    "key": "pagedown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.cursorPageDownSelect",
    "key": "shift+pagedown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "command": "-notebook.cell.cursorPageUp",
    "key": "pageup",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.cursorPageUpSelect",
    "key": "shift+pageup",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "command": "-notebook.centerActiveCell",
    "key": "ctrl+l",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.changeToCode",
    "key": "y",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.cell.changeToMarkdown",
    "key": "m",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "command": "-notebook.cell.clearOutputs",
    "key": "alt+delete",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.collapseCellInput",
    "key": "ctrl+k ctrl+c",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "command": "-notebook.cell.collapseCellOutput",
    "key": "ctrl+k t",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.commentSelectedCells",
    "key": "ctrl+/",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.copyDown",
    "key": "shift+alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.copyUp",
    "key": "shift+alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.delete",
    "key": "delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "command": "-noteMultiCursor.deleteLeft",
    "key": "backspace",
    "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
  },
  {
    "command": "-notebook.cell.edit",
    "key": "enter",
    "when": "notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "command": "-notebook.cell.execute",
    "key": "ctrl+alt+enter",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "-notebook.cell.executeAndInsertBelow",
    "key": "alt+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "-notebook.cell.executeAndSelectBelow",
    "key": "shift+enter",
    "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "-noteMultiCursor.exit",
    "key": "escape",
    "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.cell.expandCellInput",
    "key": "ctrl+k ctrl+c",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "command": "-notebook.cell.expandCellOutput",
    "key": "ctrl+k t",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.find",
    "key": "ctrl+f",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.focusTop",
    "key": "ctrl+home",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.focusInOutput",
    "key": "ctrl+down",
    "when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook"
  },
  {
    "command": "-notebook.cell.focusInOutput",
    "key": "ctrl+shift+down",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "command": "-notebook.focusBottom",
    "key": "ctrl+end",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "down",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "down",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "ctrl+down",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "ctrl+pagedown",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "command": "-notebook.cell.focusOutOutput",
    "key": "ctrl+shift+up",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "up",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "up",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "ctrl+pageup",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "command": "-notebook.fold",
    "key": "left",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.fold",
    "key": "ctrl+shift+[",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.format",
    "key": "shift+alt+f",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.cell.insertCodeCellAbove",
    "key": "ctrl+shift+enter",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.insertCodeCellBelow",
    "key": "ctrl+enter",
    "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
  },
  {
    "command": "-notebook.cell.joinBelow",
    "key": "alt+win+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.joinAbove",
    "key": "shift+alt+win+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.moveDown",
    "key": "alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.moveUp",
    "key": "alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.pasteAbove",
    "key": "ctrl+shift+v",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-notebook.cell.output.selectAll",
    "key": "ctrl+a",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "-notebook.selectAllFindMatches",
    "key": "ctrl+shift+l",
    "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.cell.openFailureActions",
    "key": "ctrl+.",
    "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
  },
  {
    "command": "-notebook.cell.split",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.quitEdit",
    "key": "escape",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "command": "-notebook.cell.quitEdit",
    "key": "ctrl+alt+enter",
    "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.cell.quitEdit",
    "key": "escape",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "-notebook.cell.toggleOutputScrolling",
    "key": "ctrl+k y",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notebook.unfold",
    "key": "right",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.unfold",
    "key": "ctrl+shift+]",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "workbench.action.nextEditorInGroup",
    "key": "ctrl+]"
  },
  {
    "command": "-workbench.action.nextEditorInGroup",
    "key": "ctrl+k ctrl+pagedown"
  },
  {
    "command": "-editor.unfold",
    "key": "ctrl+shift+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "workbench.action.previousEditorInGroup",
    "key": "ctrl+["
  },
  {
    "command": "-workbench.action.previousEditorInGroup",
    "key": "ctrl+k ctrl+pageup"
  },
  {
    "command": "-editor.fold",
    "key": "ctrl+shift+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "workbench.action.openView",
    "key": "ctrl+alt+v"
  },
  {
    "command": "-workbench.action.editorDictation.start",
    "key": "ctrl+alt+v",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "command": "-workbench.action.editorDictation.start",
    "key": "alt+`",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "command": "-workbench.action.editorDictation.stop",
    "key": "escape",
    "when": "editorDictation.inProgress"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "ctrl+shift+c",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "ctrl+alt+t ctrl+alt+t",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.createTerminalEditor",
    "key": "ctrl+alt+t ctrl+alt+e",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.terminal.split",
    "key": "alt+\\",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "ctrl+shift+5",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.reopenClosedEditor",
    "key": "ctrl+shift+t"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "ctrl+shift+t",
    "when": "terminal.active"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  {
    "command": "-editor.action.indentLines",
    "key": "ctrl+]",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.outdentLines",
    "key": "ctrl+[",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+shift+]"
  },
  {
    "command": "-workbench.action.nextEditor",
    "key": "ctrl+pagedown"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+shift+["
  },
  {
    "command": "-workbench.action.previousEditor",
    "key": "ctrl+pageup"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+right",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "alt+]",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+down",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+left",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusPreviousPane",
    "key": "alt+[",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+up",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.files.action.createFileFromExplorer",
    "key": "ctrl+n",
    "when": "focusedView == 'workbench.explorer.fileView'"
  },
  {
    "command": "-workbench.action.output.toggleOutput",
    "key": "ctrl+shift+u",
    "when": "workbench.panel.output.active"
  },
  {
    "command": "-workbench.panel.chat",
    "key": "ctrl+alt+i",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  {
    "command": "-workbench.panel.chatEditing",
    "key": "ctrl+shift+i",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "command": "-workbench.debug.action.toggleRepl",
    "key": "ctrl+shift+y",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "command": "-workbench.action.toggleZenMode",
    "key": "ctrl+k z",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "command": "-workbench.actions.view.problems",
    "key": "ctrl+shift+m",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "command": "-workbench.action.tasks.build",
    "key": "ctrl+shift+b",
    "when": "taskCommandsRegistered"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+shift+b"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "workbench.files.action.createFolderFromExplorer",
    "key": "ctrl+d",
    "when": "focusedView == 'workbench.explorer.fileView'"
  },
  {
    "command": "workbench.files.action.refreshFilesExplorer",
    "key": "ctrl+r",
    "when": "focusedView == 'workbench.explorer.fileView'"
  },
  {
    "command": "workbench.files.action.collapseExplorerFolders",
    "key": "ctrl+l",
    "when": "focusedView == 'workbench.explorer.fileView'"
  },
  {
    "command": "workbench.action.increaseViewSize",
    "key": "ctrl+alt+=",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "command": "workbench.action.decreaseViewSize",
    "key": "ctrl+alt+-",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "shift+alt+]",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusNext",
    "key": "ctrl+pagedown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "shift+alt+[",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusPrevious",
    "key": "ctrl+pageup",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.newLocal",
    "key": "ctrl+alt+t ctrl+alt+l",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.terminal.moveToEditor",
    "key": "ctrl+alt+e",
    "when": "(terminalHasBeenCreated && terminalIsOpen || terminalIsOpen && terminalProcessSupported) && (focusedView == 'terminal')"
  },
  {
    "command": "-editor.action.refactor",
    "key": "ctrl+shift+r",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "rerunSearchEditorSearch",
    "key": "ctrl+shift+f",
    "when": "inSearchEditor"
  },
  {
    "command": "-rerunSearchEditorSearch",
    "key": "ctrl+shift+r",
    "when": "inSearchEditor"
  },
  {
    "command": "workbench.action.replaceInFiles",
    "key": "ctrl+shift+r"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "ctrl+shift+h"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "key": "ctrl+shift+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "key": "ctrl+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "ctrl+alt+r",
    "when": "!terminalFocusInAny"
  },
  {
    "command": "-workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "-extension.vim_ctrl+w",
    "key": "ctrl+w",
    "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
  },
  {
    "command": "workbench.action.switchWindow",
    "key": "ctrl+alt+w"
  },
  {
    "command": "workbench.profiles.actions.switchProfile",
    "key": "ctrl+alt+p"
  },
  {
    "command": "workbench.action.quickOpenTerm",
    "key": "ctrl+alt+t ctrl+alt+w",
    "when": "terminalHasBeenCreated || terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.detachSession",
    "key": "ctrl+alt+t ctrl+alt+d",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.attachToSession",
    "key": "ctrl+alt+t ctrl+alt+a",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.splitEditorUp",
    "key": "ctrl+shift+alt+\\"
  },
  {
    "command": "-workbench.action.splitEditorUp",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorRight",
    "key": "ctrl+shift+alt+\\"
  },
  {
    "command": "-workbench.action.splitEditorRight",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorOrthogonal",
    "key": "ctrl+shift+alt+\\"
  },
  {
    "command": "-workbench.action.splitEditorOrthogonal",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorLeft",
    "key": "ctrl+shift+alt+\\"
  },
  {
    "command": "-workbench.action.splitEditorLeft",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorDown",
    "key": "ctrl+shift+alt+\\"
  },
  {
    "command": "-workbench.action.splitEditorDown",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.terminal.focusTabs",
    "key": "shift+alt+t shift+alt+t",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.focusTabs",
    "key": "ctrl+shift+\\",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "workbench.action.terminal.detachSession",
    "key": "shift+alt+t shift+alt+d",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.attachToSession",
    "key": "shift+alt+t shift+alt+a",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.newLocal",
    "key": "shift+alt+t shift+alt+l",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.createTerminalEditor",
    "key": "shift+alt+t shift+alt+e",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "workbench.action.quickOpenTerm",
    "key": "shift+alt+t shift+alt+w",
    "when": "terminalHasBeenCreated || terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.relaunch",
    "key": "ctrl+alt+t ctrl+alt+r",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.relaunch",
    "key": "shift+alt+t shift+alt+r",
    "when": "terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.moveToEditor",
    "key": "shift+alt+e",
    "when": "terminalHasBeenCreated && terminalIsOpen && focusedView == 'terminal' || terminalIsOpen && terminalProcessSupported && focusedView == 'terminal'"
  },
  {
    "command": "-extension.vim_ctrl+b",
    "key": "ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "workbench.action.terminal.splitActiveTab",
    "key": "alt+\\",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.terminal.splitActiveTab",
    "key": "ctrl+shift+5",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "workbench.files.action.collapseExplorerFolders",
    "key": "ctrl+shift+l",
    "when": "focusedView == 'workbench.explorer.fileView'"
  },
  {
    "command": "-extension.vim_ctrl+p",
    "key": "ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+n",
    "key": "ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+f",
    "key": "ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "editor.action.jumpToBracket",
    "key": "ctrl+shift+5",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.jumpToBracket",
    "key": "ctrl+shift+\\",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.showAllSymbols",
    "key": "ctrl+3"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.focusThirdEditorGroup",
    "key": "ctrl+3"
  },
  {
    "command": "-workbench.action.focusFourthEditorGroup",
    "key": "ctrl+4"
  },
  {
    "command": "-workbench.action.focusFifthEditorGroup",
    "key": "ctrl+5"
  },
  {
    "command": "-workbench.action.focusSixthEditorGroup",
    "key": "ctrl+6"
  },
  {
    "command": "-workbench.action.focusSeventhEditorGroup",
    "key": "ctrl+7"
  },
  {
    "command": "-workbench.action.focusEighthEditorGroup",
    "key": "ctrl+8"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "ctrl+9"
  },
  {
    "command": "-workbench.action.focusFirstEditorGroup",
    "key": "ctrl+1"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "ctrl+2",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "ctrl+shift+o",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.focusSecondEditorGroup",
    "key": "ctrl+2"
  },
  {
    "command": "workbench.action.quickTextSearch",
    "key": "ctrl+5"
  },
  {
    "command": "workbench.action.openView",
    "key": "shift+alt+v"
  },
  {
    "command": "-extension.vim_ctrl+h",
    "key": "ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "command": "editor.action.startFindReplaceAction",
    "key": "ctrl+r",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "-editor.action.startFindReplaceAction",
    "key": "ctrl+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "selectAllSearchEditorMatches",
    "key": "ctrl+shift+a",
    "when": "inSearchEditor"
  },
  {
    "command": "-selectAllSearchEditorMatches",
    "key": "ctrl+shift+l",
    "when": "inSearchEditor"
  },
  {
    "command": "editor.action.selectHighlights",
    "key": "ctrl+shift+a",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.selectHighlights",
    "key": "ctrl+shift+l",
    "when": "editorFocus"
  },
  {
    "command": "workbench.action.closeEditorsInGroup",
    "key": "ctrl+alt+e ctrl+alt+w"
  },
  {
    "command": "-workbench.action.closeEditorsInGroup",
    "key": "ctrl+k w"
  },
  {
    "command": "workbench.action.closeAllEditors",
    "key": "ctrl+alt+e ctrl+shift+w"
  },
  {
    "command": "-workbench.action.closeAllEditors",
    "key": "ctrl+k ctrl+w"
  },
  {
    "command": "workbench.action.closeAllGroups",
    "key": "ctrl+alt+g ctrl+alt+w"
  },
  {
    "command": "-workbench.action.closeAllGroups",
    "key": "ctrl+k ctrl+shift+w"
  },
  {
    "command": "-workbench.action.closeFolder",
    "key": "ctrl+k f",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "command": "-workbench.action.output.toggleOutput",
    "key": "ctrl+k ctrl+h",
    "when": "workbench.panel.output.active"
  },
  {
    "command": "-testing.debugAll",
    "key": "ctrl+; ctrl+a"
  },
  {
    "command": "-testing.debugFailTests",
    "key": "ctrl+; ctrl+e"
  },
  {
    "command": "-testing.debugLastRun",
    "key": "ctrl+; ctrl+l"
  },
  {
    "command": "-testing.debugAtCursor",
    "key": "ctrl+; ctrl+c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.debugCurrentFile",
    "key": "ctrl+; ctrl+f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.goToNextMessage",
    "key": "alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "-testing.goToPreviousMessage",
    "key": "shift+alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "-testing.openOutputPeek",
    "key": "ctrl+; ctrl+m"
  },
  {
    "command": "-testing.refreshTests",
    "key": "ctrl+; ctrl+r",
    "when": "testing.canRefresh"
  },
  {
    "command": "-testing.reRunFailTests",
    "key": "ctrl+; e"
  },
  {
    "command": "-testing.reRunLastRun",
    "key": "ctrl+; l"
  },
  {
    "command": "-testing.coverageLastRun",
    "key": "ctrl+; ctrl+shift+l"
  },
  {
    "command": "-testing.runAll",
    "key": "ctrl+; a"
  },
  {
    "command": "-testing.coverageAll",
    "key": "ctrl+; ctrl+shift+a"
  },
  {
    "command": "-testing.runAtCursor",
    "key": "ctrl+; c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.coverageAtCursor",
    "key": "ctrl+; ctrl+shift+c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.runCurrentFile",
    "key": "ctrl+; f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.coverageCurrentFile",
    "key": "ctrl+; ctrl+shift+f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.showMostRecentOutput",
    "key": "ctrl+; ctrl+o",
    "when": "testing.hasAnyResults"
  },
  {
    "command": "-testing.toggleInlineCoverage",
    "key": "ctrl+; ctrl+shift+i"
  },
  {
    "command": "-testing.toggleInlineTestOutput",
    "key": "ctrl+; ctrl+i"
  },
  {
    "command": "-testing.toggleTestingPeekHistory",
    "key": "alt+h",
    "when": "testing.isPeekVisible"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "shift+alt+f4"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "ctrl+e",
    "when": "accessibilityHelpIsShown"
  },
  {
    "command": "-workbench.panel.chatEditing",
    "key": "ctrl+shift+alt+i",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "command": "-editor.action.accessibilityHelp",
    "key": "alt+f1",
    "when": "!accessibilityHelpIsShown"
  },
  {
    "command": "-editor.action.accessibilityHelp",
    "key": "shift+alt+f1",
    "when": "!accessibilityHelpIsShown"
  },
  {
    "command": "workbench.action.unpinEditor",
    "key": "shift+alt+e p",
    "when": "activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.unpinEditor",
    "key": "ctrl+k shift+enter",
    "when": "activeEditorIsPinned"
  },
  {
    "command": "workbench.action.pinEditor",
    "key": "shift+alt+e p",
    "when": "!activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.pinEditor",
    "key": "ctrl+k shift+enter",
    "when": "!activeEditorIsPinned"
  },
  {
    "command": "-editor.action.toggleOvertypeInsertMode",
    "key": "insert"
  },
  {
    "command": "workbench.action.closeAllGroups",
    "key": "shift+alt+g shift+alt+w"
  },
  {
    "command": "workbench.action.closeAllEditors",
    "key": "shift+alt+e ctrl+shift+w"
  },
  {
    "command": "workbench.action.closeEditorsInGroup",
    "key": "shift+alt+e ctrl+alt+w"
  },
  {
    "key": "alt+f2",
    "command": "-editor.action.accessibleView"
  },
  {
    "key": "shift+alt+f2",
    "command": "-editor.action.accessibleView"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "alt+f5",
    "command": "-chatEditor.action.navigateNext",
    "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "shift+alt+f5",
    "command": "-chatEditor.action.navigatePrevious",
    "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+enter",
    "command": "-chatEditor.action.accept",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-chatEditor.action.acceptHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+shift+alt+i",
    "command": "-workbench.action.chat.openEditSession",
    "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "key": "f7",
    "command": "-chatEditor.action.showAccessibleDiffView",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+backspace",
    "command": "-chatEditor.action.reject",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+shift+backspace",
    "command": "-chatEditor.action.undoHunk",
    "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress"
  },
  {
    "key": "ctrl+alt+/",
    "command": "-workbench.command.prompts.use",
    "when": "config.chat.promptFiles"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat.start",
    "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "key": "escape",
    "command": "-inlineChat2.stop",
    "when": "inlineChatHasEditsAgent && inlineChatVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat2.stop",
    "when": "inlineChatHasEditsAgent && inlineChatVisible && chatEdits.requestCount == '0'"
  },
  {
    "key": "ctrl+i",
    "command": "-inlineChat2.reveal",
    "when": "inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "-git.unstageSelectedRanges",
    "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
  },
  {
    "key": "ctrl+alt+e ctrl+p",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+k ctrl+p",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "shift+alt+e ctrl+p",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "shift+alt+t",
    "command": "-clangd.typeHierarchy",
    "when": "editorTextFocus && resourceLangId == 'cpp' || editorTextFocus && resourceLangId == 'cuda-cpp' || editorTextFocus && resourceLangId == 'objective-c' || editorTextFocus && resourceLangId == 'objective-cpp'"
  },
  {
    "key": "shift+alt+f1",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'vscode-remote'"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "editorTextFocus && !operationInProgress && resourceScheme == 'vscode-remote'"
  },
  {
    "key": "alt+d",
    "command": "-plantuml.preview"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-devicetree.editor.showNodeQuickpick",
    "when": "activeCustomEditorId == 'devicetree.editor' || nrf-devicetree.editor.nodeTree.active && activeCustomEditorId == 'devicetree.editor'"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-cmake.launchTarget",
    "when": "cmake:enableFullFeatureSet && !cmake:hideDebugCommand && !inDebugMode"
  },
  {
    "key": "shift+f5",
    "command": "-cmake.debugTarget",
    "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
  },
  {
    "key": "shift+f7",
    "command": "-cmake.buildWithTarget",
    "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
  },
  {
    "key": "f7",
    "command": "-cmake.build",
    "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
  },
  {
    "key": "alt+o",
    "command": "-clangd.switchheadersource",
    "when": "editorTextFocus && resourceLangId == 'c' || editorTextFocus && resourceLangId == 'cpp' || editorTextFocus && resourceLangId == 'cuda-cpp' || editorTextFocus && resourceLangId == 'objective-c' || editorTextFocus && resourceLangId == 'objective-cpp'"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.switchWindow"
  },
  {
    "key": "shift+alt+r",
    "command": "workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "shift+alt+o",
    "command": "workbench.action.remote.showMenu"
  },
  {
    "key": "shift+alt+r",
    "command": "workbench.action.openRecent",
    "when": "!terminalFocusInAny"
  },
  {
    "key": "shift+alt+r",
    "command": "workbench.action.terminal.runRecentCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "shift+alt+b",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+shift+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "shift+alt+e shift+alt+w",
    "command": "workbench.action.closeEditorsInGroup"
  }
]
