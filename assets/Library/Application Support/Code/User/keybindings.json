[
  {
    "command": "workbench.action.exitZenMode",
    "key": "escape escape",
    "when": "inZenMode"
  },
  {
    "command": "closeReferenceSearch",
    "key": "shift+escape",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "command": "closeReferenceSearch",
    "key": "escape",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "command": "editor.closeTestPeek",
    "key": "escape",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "command": "cancelSelection",
    "key": "shift+escape",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "command": "cancelSelection",
    "key": "escape",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "command": "cursorBottom",
    "key": "ctrl+end",
    "when": "textInputFocus"
  },
  {
    "command": "cursorBottomSelect",
    "key": "ctrl+shift+end",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectDown",
    "key": "ctrl+shift+alt+down",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectLeft",
    "key": "ctrl+shift+alt+left",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectPageDown",
    "key": "ctrl+shift+alt+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectPageUp",
    "key": "ctrl+shift+alt+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectRight",
    "key": "ctrl+shift+alt+right",
    "when": "textInputFocus"
  },
  {
    "command": "cursorColumnSelectUp",
    "key": "ctrl+shift+alt+up",
    "when": "textInputFocus"
  },
  {
    "command": "cursorDown",
    "key": "down",
    "when": "textInputFocus"
  },
  {
    "command": "cursorDownSelect",
    "key": "ctrl+shift+down",
    "when": "textInputFocus"
  },
  {
    "command": "cursorDownSelect",
    "key": "shift+down",
    "when": "textInputFocus"
  },
  {
    "args": {
      "sticky": false
    },
    "command": "cursorEnd",
    "key": "end",
    "when": "textInputFocus"
  },
  {
    "args": {
      "sticky": false
    },
    "command": "cursorEndSelect",
    "key": "shift+end",
    "when": "textInputFocus"
  },
  {
    "command": "cursorHome",
    "key": "home",
    "when": "textInputFocus"
  },
  {
    "command": "cursorHomeSelect",
    "key": "shift+home",
    "when": "textInputFocus"
  },
  {
    "command": "cursorLeft",
    "key": "left",
    "when": "textInputFocus"
  },
  {
    "command": "cursorLeftSelect",
    "key": "shift+left",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageDown",
    "key": "pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageDownSelect",
    "key": "shift+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageUp",
    "key": "pageup",
    "when": "textInputFocus"
  },
  {
    "command": "cursorPageUpSelect",
    "key": "shift+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "cursorRight",
    "key": "right",
    "when": "textInputFocus"
  },
  {
    "command": "cursorRightSelect",
    "key": "shift+right",
    "when": "textInputFocus"
  },
  {
    "command": "cursorTop",
    "key": "ctrl+home",
    "when": "textInputFocus"
  },
  {
    "command": "cursorTopSelect",
    "key": "ctrl+shift+home",
    "when": "textInputFocus"
  },
  {
    "command": "cursorUp",
    "key": "up",
    "when": "textInputFocus"
  },
  {
    "command": "cursorUpSelect",
    "key": "ctrl+shift+up",
    "when": "textInputFocus"
  },
  {
    "command": "cursorUpSelect",
    "key": "shift+up",
    "when": "textInputFocus"
  },
  {
    "command": "deleteLeft",
    "key": "shift+backspace",
    "when": "textInputFocus"
  },
  {
    "command": "deleteLeft",
    "key": "backspace",
    "when": "textInputFocus"
  },
  {
    "command": "deleteRight",
    "key": "delete",
    "when": "textInputFocus"
  },
  {
    "command": "editor.action.selectAll",
    "key": "ctrl+a"
  },
  {
    "command": "outdent",
    "key": "shift+tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "command": "redo",
    "key": "ctrl+shift+z"
  },
  {
    "command": "redo",
    "key": "ctrl+y"
  },
  {
    "command": "scrollLineDown",
    "key": "ctrl+down",
    "when": "textInputFocus"
  },
  {
    "command": "scrollLineUp",
    "key": "ctrl+up",
    "when": "textInputFocus"
  },
  {
    "command": "scrollPageDown",
    "key": "alt+pagedown",
    "when": "textInputFocus"
  },
  {
    "command": "scrollPageUp",
    "key": "alt+pageup",
    "when": "textInputFocus"
  },
  {
    "command": "tab",
    "key": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "command": "undo",
    "key": "ctrl+z"
  },
  {
    "command": "cursorColumnSelectDown",
    "key": "shift+down",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "cursorColumnSelectLeft",
    "key": "shift+left",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "cursorColumnSelectPageDown",
    "key": "shift+pagedown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "cursorColumnSelectPageUp",
    "key": "shift+pageup",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "cursorColumnSelectRight",
    "key": "shift+right",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "cursorColumnSelectUp",
    "key": "shift+up",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "command": "removeSecondaryCursors",
    "key": "shift+escape",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "command": "removeSecondaryCursors",
    "key": "escape",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "command": "notebook.cell.chat.acceptChanges",
    "key": "escape",
    "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused"
  },
  {
    "command": "notebook.cell.chat.nextFromHistory",
    "key": "down",
    "when": "inlineChatFocused && notebookCellChatFocused"
  },
  {
    "command": "notebook.cell.chat.previousFromHistory",
    "key": "up",
    "when": "inlineChatFocused && notebookCellChatFocused"
  },
  {
    "command": "inlineChat.hideHint",
    "key": "escape",
    "when": "inlineChatShowingHint"
  },
  {
    "command": "testing.editFocusedTest",
    "key": "alt+enter",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "command": "notebook.cell.quitEdit",
    "key": "escape",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused"
  },
  {
    "command": "notebook.cell.quitEdit",
    "key": "ctrl+alt+enter",
    "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
  },
  {
    "command": "actions.find",
    "key": "ctrl+f",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "breakpointWidget.action.acceptInput",
    "key": "enter",
    "when": "breakpointWidgetVisible && inBreakpointWidget"
  },
  {
    "command": "chat.action.focus",
    "key": "ctrl+up",
    "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
  },
  {
    "command": "chat.action.focus",
    "key": "ctrl+up",
    "when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus"
  },
  {
    "command": "closeBreakpointWidget",
    "key": "shift+escape",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "command": "closeBreakpointWidget",
    "key": "escape",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "command": "cursorUndo",
    "key": "ctrl+u",
    "when": "textInputFocus"
  },
  {
    "command": "deleteWordLeft",
    "key": "ctrl+backspace",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "deleteWordRight",
    "key": "ctrl+delete",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "ctrl+d",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.blockComment",
    "key": "ctrl+alt+/",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.cancelSelectionAnchor",
    "key": "escape",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "command": "editor.action.clipboardCopyAction",
    "key": "ctrl+insert"
  },
  {
    "command": "editor.action.clipboardCopyAction",
    "key": "ctrl+c"
  },
  {
    "command": "editor.action.clipboardCutAction",
    "key": "shift+delete"
  },
  {
    "command": "editor.action.clipboardCutAction",
    "key": "ctrl+x"
  },
  {
    "command": "editor.action.clipboardPasteAction",
    "key": "shift+insert"
  },
  {
    "command": "editor.action.clipboardPasteAction",
    "key": "ctrl+v"
  },
  {
    "command": "editor.action.commentLine",
    "key": "ctrl+/",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.copyLinesDownAction",
    "key": "shift+alt+down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.copyLinesUpAction",
    "key": "shift+alt+up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.extensioneditor.findNext",
    "key": "enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "editor.action.extensioneditor.findPrevious",
    "key": "shift+enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "editor.action.extensioneditor.showfind",
    "key": "ctrl+f",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "command": "editor.action.formatDocument",
    "key": "shift+alt+f",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "command": "editor.action.formatDocument.none",
    "key": "shift+alt+f",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "command": "editor.action.goToBottomHover",
    "key": "ctrl+down",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.goToBottomHover",
    "key": "end",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.goToFocusedStickyScrollLine",
    "key": "enter",
    "when": "stickyScrollFocused"
  },
  {
    "command": "editor.action.goToTopHover",
    "key": "ctrl+up",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.goToTopHover",
    "key": "home",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.hideColorPicker",
    "key": "escape",
    "when": "standaloneColorPickerVisible"
  },
  {
    "command": "editor.action.indentLines",
    "key": "ctrl+]",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.inlineSuggest.hide",
    "key": "escape",
    "when": "inlineEditIsVisible || inlineSuggestionVisible"
  },
  {
    "command": "editor.action.inlineSuggest.showNext",
    "key": "alt+]",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "editor.action.inlineSuggest.showPrevious",
    "key": "alt+[",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "editor.action.insertColorWithStandaloneColorPicker",
    "key": "enter",
    "when": "standaloneColorPickerFocused"
  },
  {
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+alt+up",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorBelow",
    "key": "ctrl+alt+down",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertLineAfter",
    "key": "ctrl+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.insertLineBefore",
    "key": "ctrl+shift+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.jumpToBracket",
    "key": "ctrl+shift+\\",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "alt+down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "alt+up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.nextMatchFindAction",
    "key": "enter",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "command": "editor.action.organizeImports",
    "key": "shift+alt+o",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "command": "editor.action.outdentLines",
    "key": "ctrl+[",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "editor.action.pageDownHover",
    "key": "alt+down",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.pageDownHover",
    "key": "pagedown",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.pageUpHover",
    "key": "alt+up",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.pageUpHover",
    "key": "pageup",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.previousMatchFindAction",
    "key": "shift+enter",
    "when": "editorFocus && findInputFocussed"
  },
  {
    "command": "editor.action.removeBrackets",
    "key": "ctrl+alt+backspace",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.scrollDownHover",
    "key": "down",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollLeftHover",
    "key": "left",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollRightHover",
    "key": "right",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollUpHover",
    "key": "up",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.selectEditor",
    "key": "escape",
    "when": "stickyScrollFocused"
  },
  {
    "command": "editor.action.selectNextStickyScrollLine",
    "key": "down",
    "when": "stickyScrollFocused"
  },
  {
    "command": "editor.action.selectPreviousStickyScrollLine",
    "key": "up",
    "when": "stickyScrollFocused"
  },
  {
    "command": "editor.action.smartSelect.expand",
    "key": "shift+alt+right",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.submitComment",
    "key": "ctrl+enter",
    "when": "commentEditorFocused"
  },
  {
    "command": "editor.action.toggleWordWrap",
    "key": "alt+z"
  },
  {
    "command": "editor.action.triggerParameterHints",
    "key": "ctrl+shift+space",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "command": "editor.action.webvieweditor.findNext",
    "key": "enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "editor.action.webvieweditor.findPrevious",
    "key": "shift+enter",
    "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "editor.action.webvieweditor.hideFind",
    "key": "escape",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "editor.action.webvieweditor.showFind",
    "key": "ctrl+f",
    "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "command": "editor.cancelOperation",
    "key": "escape",
    "when": "cancellableOperation"
  },
  {
    "command": "editor.debug.action.closeExceptionWidget",
    "key": "escape",
    "when": "exceptionWidgetVisible"
  },
  {
    "command": "editor.emmet.action.expandAbbreviation",
    "key": "tab",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "command": "editor.gotoNextSymbolFromResult.cancel",
    "key": "escape",
    "when": "hasSymbols"
  },
  {
    "command": "editor.hideDropWidget",
    "key": "escape",
    "when": "dropWidgetVisible"
  },
  {
    "command": "editor.hidePasteWidget",
    "key": "escape",
    "when": "pasteWidgetVisible"
  },
  {
    "command": "inlayHints.stopReadingLineWithHint",
    "key": "escape",
    "when": "isReadingLineWithInlayHints"
  },
  {
    "command": "inlineChat.discardHunkChange",
    "key": "escape",
    "when": "inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits'"
  },
  {
    "command": "insertSnippet",
    "key": "tab",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  {
    "command": "interactive.execute",
    "key": "ctrl+enter",
    "when": "isCompositeNotebook && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "command": "interactive.execute",
    "key": "shift+enter",
    "when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "command": "interactive.execute",
    "key": "enter",
    "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'"
  },
  {
    "command": "notebook.cell.chat.discard",
    "key": "escape",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit"
  },
  {
    "command": "notebook.cell.cursorPageDown",
    "key": "pagedown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "command": "notebook.cell.cursorPageDownSelect",
    "key": "shift+pagedown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "command": "notebook.cell.cursorPageUp",
    "key": "pageup",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "command": "notebook.cell.cursorPageUpSelect",
    "key": "shift+pageup",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused"
  },
  {
    "command": "notebook.cell.execute",
    "key": "ctrl+alt+enter",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "notebook.cell.executeAndInsertBelow",
    "key": "alt+enter",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "notebook.cell.executeAndSelectBelow",
    "key": "shift+enter",
    "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "command": "notebook.cell.pasteAbove",
    "key": "ctrl+shift+v",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.formatCell",
    "key": "shift+alt+f",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "openReferenceToSide",
    "key": "ctrl+enter",
    "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused"
  },
  {
    "command": "repl.action.acceptInput",
    "key": "enter",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "command": "repl.action.filter",
    "key": "ctrl+f",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "command": "repl.action.find",
    "key": "ctrl+alt+f",
    "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
  },
  {
    "command": "repl.execute",
    "key": "ctrl+enter",
    "when": "isCompositeNotebook && activeEditor == 'workbench.editor.repl'"
  },
  {
    "command": "repl.execute",
    "key": "shift+enter",
    "when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl'"
  },
  {
    "command": "repl.execute",
    "key": "enter",
    "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.repl'"
  },
  {
    "command": "repl.focusLastItemExecuted",
    "key": "alt+end alt+end",
    "when": "isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused"
  },
  {
    "command": "repl.input.focus",
    "key": "ctrl+down",
    "when": "isCompositeNotebook && notebookEditorFocused"
  },
  {
    "command": "settings.action.clearSearchResults",
    "key": "escape",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "command": "settings.action.focusSettingsFile",
    "key": "down",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "settings.action.search",
    "key": "ctrl+f",
    "when": "inSettingsEditor"
  },
  {
    "command": "toggleExplainMode",
    "key": "ctrl+/",
    "when": "suggestWidgetVisible"
  },
  {
    "command": "welcome.goBack",
    "key": "escape",
    "when": "inWelcome && activeEditor == 'gettingStartedPage'"
  },
  {
    "command": "workbench.action.chat.attachContext",
    "key": "ctrl+/",
    "when": "inChatInput && chatLocation == 'editing-session' || inChatInput && chatLocation == 'editor' || inChatInput && chatLocation == 'notebook' || inChatInput && chatLocation == 'panel' || inChatInput && chatLocation == 'terminal'"
  },
  {
    "command": "workbench.action.chat.submit",
    "key": "enter",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation != 'editing-session'"
  },
  {
    "command": "workbench.action.chat.submitSecondaryAgent",
    "key": "ctrl+enter",
    "when": "chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress"
  },
  {
    "command": "workbench.action.chat.submitWithoutDispatching",
    "key": "shift+alt+enter",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editor' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'panel'"
  },
  {
    "command": "workbench.action.edits.submit",
    "key": "enter",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress && !isApplyingChatEdits && chatLocation == 'editing-session'"
  },
  {
    "command": "workbench.action.hideComment",
    "key": "shift+escape",
    "when": "commentEditorFocused || commentFocused"
  },
  {
    "command": "workbench.action.hideComment",
    "key": "escape",
    "when": "commentEditorFocused || commentFocused"
  },
  {
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "key": "ctrl+right",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "inlineChat.close",
    "key": "escape",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "closeFindWidget",
    "key": "shift+escape",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "command": "closeFindWidget",
    "key": "escape",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "command": "editor.action.replaceAll",
    "key": "ctrl+alt+enter",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "editor.action.replaceOne",
    "key": "enter",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "command": "editor.action.selectAllMatches",
    "key": "alt+enter",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "toggleFindCaseSensitive",
    "key": "alt+c",
    "when": "editorFocus"
  },
  {
    "command": "toggleFindRegex",
    "key": "alt+r",
    "when": "editorFocus"
  },
  {
    "command": "toggleFindWholeWord",
    "key": "alt+w",
    "when": "editorFocus"
  },
  {
    "command": "togglePreserveCase",
    "key": "alt+p",
    "when": "editorFocus"
  },
  {
    "command": "notebook.cell.chat.acceptChanges",
    "key": "ctrl+enter",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
  },
  {
    "command": "jumpToNextSnippetPlaceholder",
    "key": "tab",
    "when": "hasNextTabstop && inSnippetMode && textInputFocus"
  },
  {
    "command": "jumpToPrevSnippetPlaceholder",
    "key": "shift+tab",
    "when": "hasPrevTabstop && inSnippetMode && textInputFocus"
  },
  {
    "command": "leaveEditorMessage",
    "key": "escape",
    "when": "messageVisible"
  },
  {
    "command": "leaveSnippet",
    "key": "shift+escape",
    "when": "inSnippetMode && textInputFocus"
  },
  {
    "command": "leaveSnippet",
    "key": "escape",
    "when": "inSnippetMode && textInputFocus"
  },
  {
    "command": "closeDirtyDiff",
    "key": "shift+escape",
    "when": "dirtyDiffVisible"
  },
  {
    "command": "closeDirtyDiff",
    "key": "escape",
    "when": "dirtyDiffVisible"
  },
  {
    "command": "closeMarkersNavigation",
    "key": "shift+escape",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "command": "closeMarkersNavigation",
    "key": "escape",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "command": "notifications.hideToasts",
    "key": "escape",
    "when": "notificationToastsVisible"
  },
  {
    "command": "closeParameterHints",
    "key": "shift+escape",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "command": "closeParameterHints",
    "key": "escape",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "command": "showNextParameterHint",
    "key": "alt+down",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "showNextParameterHint",
    "key": "down",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "showPrevParameterHint",
    "key": "alt+up",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "showPrevParameterHint",
    "key": "up",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "acceptAlternativeSelectedSuggestion",
    "key": "shift+tab",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "acceptAlternativeSelectedSuggestion",
    "key": "shift+enter",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "acceptSelectedSuggestion",
    "key": "tab",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "acceptSelectedSuggestion",
    "key": "enter",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "command": "hideSuggestWidget",
    "key": "shift+escape",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "hideSuggestWidget",
    "key": "escape",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "insertBestCompletion",
    "key": "tab",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "insertNextSuggestion",
    "key": "tab",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "insertPrevSuggestion",
    "key": "shift+tab",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "command": "selectNextPageSuggestion",
    "key": "ctrl+pagedown",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectNextPageSuggestion",
    "key": "pagedown",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+down",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectNextSuggestion",
    "key": "down",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectPrevPageSuggestion",
    "key": "ctrl+pageup",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectPrevPageSuggestion",
    "key": "pageup",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+up",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "up",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "toggleSuggestionFocus",
    "key": "ctrl+alt+space",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "acceptRenameInput",
    "key": "enter",
    "when": "editorFocus && renameInputVisible && !isComposing"
  },
  {
    "command": "acceptRenameInputWithPreview",
    "key": "ctrl+enter",
    "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
  },
  {
    "command": "cancelLinkedEditingInput",
    "key": "shift+escape",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "command": "cancelLinkedEditingInput",
    "key": "escape",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "command": "cancelRenameInput",
    "key": "shift+escape",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "command": "cancelRenameInput",
    "key": "escape",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "command": "focusNextRenameSuggestion",
    "key": "down",
    "when": "renameInputVisible"
  },
  {
    "command": "focusPreviousRenameSuggestion",
    "key": "up",
    "when": "renameInputVisible"
  },
  {
    "command": "breadcrumbs.focusNext",
    "key": "ctrl+right",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.focusNext",
    "key": "right",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.focusPrevious",
    "key": "ctrl+left",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.focusPrevious",
    "key": "left",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.revealFocused",
    "key": "ctrl+enter",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.revealFocused",
    "key": "space",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.revealFocusedFromTreeAside",
    "key": "ctrl+enter",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "breadcrumbs.selectFocused",
    "key": "down",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "breadcrumbs.selectFocused",
    "key": "enter",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "chat.action.focus",
    "key": "ctrl+down",
    "when": "inChat && inChatInput && quickChatHasFocus"
  },
  {
    "command": "chat.inlineResourceAnchor.copyResource",
    "key": "ctrl+c",
    "when": "chatAttachmentResource"
  },
  {
    "command": "chatEditing.acceptAllFiles",
    "key": "ctrl+enter",
    "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
  },
  {
    "command": "chatEditing.discardAllFiles",
    "key": "ctrl+backspace",
    "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
  },
  {
    "command": "chatEditing.saveAllFiles",
    "key": "ctrl+s",
    "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
  },
  {
    "command": "chatEditor.action.accept",
    "key": "ctrl+enter",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
  },
  {
    "command": "chatEditor.action.reject",
    "key": "ctrl+backspace",
    "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
  },
  {
    "command": "chatEditor.action.undoHunk",
    "key": "ctrl+shift+backspace",
    "when": "editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
  },
  {
    "command": "closeReplaceInFilesWidget",
    "key": "escape",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "command": "commentsClearFilterText",
    "key": "escape",
    "when": "commentsFilterFocus"
  },
  {
    "command": "commentsFocusFilter",
    "key": "ctrl+f",
    "when": "focusedView == 'workbench.panel.comments'"
  },
  {
    "command": "commentsFocusViewFromFilter",
    "key": "ctrl+down",
    "when": "commentsFilterFocus"
  },
  {
    "command": "copyFilePath",
    "key": "shift+alt+c",
    "when": "!editorFocus"
  },
  {
    "command": "copyFilePath",
    "key": "shift+alt+c",
    "when": "editorFocus"
  },
  {
    "command": "debug.openBreakpointToSide",
    "key": "alt+enter",
    "when": "breakpointsFocused"
  },
  {
    "command": "debug.openBreakpointToSide",
    "key": "ctrl+enter",
    "when": "breakpointsFocused"
  },
  {
    "command": "debug.removeBreakpoint",
    "key": "delete",
    "when": "breakpointsFocused && !breakpointInputFocused"
  },
  {
    "command": "debug.removeWatchExpression",
    "key": "delete",
    "when": "watchExpressionsFocused && !expressionSelected"
  },
  {
    "command": "editor.action.inlineSuggest.commit",
    "key": "tab",
    "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "command": "editor.detectLanguage",
    "key": "shift+alt+d",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "command": "editor.refocusCallHierarchy",
    "key": "shift+enter",
    "when": "callHierarchyVisible"
  },
  {
    "command": "editor.refocusTypeHierarchy",
    "key": "shift+enter",
    "when": "typeHierarchyVisible"
  },
  {
    "command": "explorer.openToSide",
    "key": "ctrl+enter",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },
  {
    "command": "filesExplorer.findInFolder",
    "key": "shift+alt+f",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "command": "history.showNext",
    "key": "alt+down",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "command": "history.showNext",
    "key": "down",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "command": "history.showPrevious",
    "key": "alt+up",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "command": "history.showPrevious",
    "key": "up",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "command": "iconSelectBox.focusDown",
    "key": "down",
    "when": "iconSelectBoxFocus"
  },
  {
    "command": "iconSelectBox.focusNext",
    "key": "right",
    "when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus"
  },
  {
    "command": "iconSelectBox.focusPrevious",
    "key": "left",
    "when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus"
  },
  {
    "command": "iconSelectBox.focusUp",
    "key": "up",
    "when": "iconSelectBoxFocus"
  },
  {
    "command": "iconSelectBox.selectFocused",
    "key": "enter",
    "when": "iconSelectBoxFocus"
  },
  {
    "command": "inlineChat.regenerate",
    "key": "ctrl+r",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "inlineChat.unstash",
    "key": "ctrl+z",
    "when": "inlineChatHasStashedSession && !editorReadonly"
  },
  {
    "command": "inlineChat.viewInChat",
    "key": "ctrl+down",
    "when": "inChatInput && inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "interactive.history.focus",
    "key": "ctrl+up",
    "when": "isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused"
  },
  {
    "command": "interactive.history.next",
    "key": "down",
    "when": "isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
  },
  {
    "command": "interactive.history.previous",
    "key": "up",
    "when": "isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "command": "interactive.scrollToBottom",
    "key": "ctrl+end",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "command": "interactive.scrollToTop",
    "key": "ctrl+home",
    "when": "activeEditor == 'workbench.editor.interactive'"
  },
  {
    "command": "keybindings.editor.acceptWhenExpression",
    "key": "enter",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "command": "keybindings.editor.clearSearchResults",
    "key": "escape",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "keybindings.editor.copyKeybindingEntry",
    "key": "ctrl+c",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "command": "keybindings.editor.defineKeybinding",
    "key": "enter",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "command": "keybindings.editor.focusKeybindings",
    "key": "ctrl+down",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "keybindings.editor.rejectWhenExpression",
    "key": "escape",
    "when": "inKeybindings && whenFocus && !suggestWidgetVisible"
  },
  {
    "command": "keybindings.editor.removeKeybinding",
    "key": "delete",
    "when": "inKeybindings && keybindingFocus && !inputFocus"
  },
  {
    "command": "keybindings.editor.searchKeybindings",
    "key": "ctrl+f",
    "when": "inKeybindings"
  },
  {
    "command": "keybindings.editor.toggleSortByPrecedence",
    "key": "alt+p",
    "when": "inKeybindings"
  },
  {
    "command": "list.clear",
    "key": "escape",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.closeFind",
    "key": "escape",
    "when": "listFocus && treeFindOpen"
  },
  {
    "command": "list.collapse",
    "key": "left",
    "when": "listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.collapseAll",
    "key": "ctrl+left",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.expand",
    "key": "right",
    "when": "listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.expandSelectionDown",
    "key": "shift+down",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.expandSelectionUp",
    "key": "shift+up",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.find",
    "key": "ctrl+alt+f",
    "when": "listFocus && listSupportsFind"
  },
  {
    "command": "list.focusAnyDown",
    "key": "alt+down",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusAnyFirst",
    "key": "alt+home",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusAnyLast",
    "key": "alt+end",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusAnyUp",
    "key": "alt+up",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusDown",
    "key": "down",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusFirst",
    "key": "home",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusLast",
    "key": "end",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusPageDown",
    "key": "pagedown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusPageUp",
    "key": "pageup",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.focusUp",
    "key": "up",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.scrollDown",
    "key": "ctrl+down",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
  },
  {
    "command": "list.scrollUp",
    "key": "ctrl+up",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
  },
  {
    "command": "list.select",
    "key": "enter",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.selectAll",
    "key": "ctrl+a",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.toggleExpand",
    "key": "space",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "list.toggleSelection",
    "key": "ctrl+shift+enter",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "noteMultiCursor.deleteLeft",
    "key": "backspace",
    "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
  },
  {
    "command": "noteMultiCursor.deleteRight",
    "key": "delete",
    "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'"
  },
  {
    "command": "noteMultiCursor.exit",
    "key": "escape",
    "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "notebook.addFindMatchToSelection",
    "key": "ctrl+d",
    "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "notebook.cell.changeToCode",
    "key": "y",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "command": "notebook.cell.chat.accept",
    "key": "enter",
    "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
  },
  {
    "command": "notebook.cell.chat.acceptChanges",
    "key": "ctrl+enter",
    "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
  },
  {
    "command": "notebook.cell.chat.focus",
    "key": "ctrl+down",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'"
  },
  {
    "command": "notebook.cell.chat.focus",
    "key": "ctrl+up",
    "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'"
  },
  {
    "command": "notebook.cell.chat.focusNextCell",
    "key": "ctrl+down",
    "when": "inlineChatFocused && notebookCellChatFocused"
  },
  {
    "command": "notebook.cell.chat.focusPreviousCell",
    "key": "ctrl+up",
    "when": "inlineChatFocused && notebookCellChatFocused"
  },
  {
    "command": "notebook.cell.clearOutputs",
    "key": "alt+delete",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.cell.copyDown",
    "key": "shift+alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.cell.copyUp",
    "key": "shift+alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.cell.delete",
    "key": "delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "command": "notebook.cell.detectLanguage",
    "key": "shift+alt+d",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "command": "notebook.cell.edit",
    "key": "enter",
    "when": "notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "command": "notebook.cell.focusInOutput",
    "key": "ctrl+down",
    "when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook"
  },
  {
    "command": "notebook.cell.focusInOutput",
    "key": "ctrl+shift+down",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "command": "notebook.cell.focusOutOutput",
    "key": "ctrl+shift+up",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "notebook.cell.insertCodeCellAbove",
    "key": "ctrl+shift+enter",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "command": "notebook.cell.insertCodeCellBelow",
    "key": "ctrl+enter",
    "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
  },
  {
    "command": "notebook.cell.moveDown",
    "key": "alt+down",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.cell.moveUp",
    "key": "alt+up",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.commentSelectedCells",
    "key": "ctrl+/",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.find",
    "key": "ctrl+f",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "notebook.focusBottom",
    "key": "ctrl+end",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.focusNextEditor",
    "key": "ctrl+down",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "notebook.focusTop",
    "key": "ctrl+home",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "command": "notebook.format",
    "key": "shift+alt+f",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "notebook.hideFind",
    "key": "escape",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "command": "notification.clear",
    "key": "delete",
    "when": "notificationFocus"
  },
  {
    "command": "notification.collapse",
    "key": "left",
    "when": "notificationFocus"
  },
  {
    "command": "notification.expand",
    "key": "right",
    "when": "notificationFocus"
  },
  {
    "command": "notification.toggle",
    "key": "enter",
    "when": "notificationFocus"
  },
  {
    "command": "notification.toggle",
    "key": "space",
    "when": "notificationFocus"
  },
  {
    "command": "notifications.focusFirstToast",
    "key": "home",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusFirstToast",
    "key": "pageup",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusLastToast",
    "key": "end",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusLastToast",
    "key": "pagedown",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusNextToast",
    "key": "down",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "notifications.focusPreviousToast",
    "key": "up",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "problems.action.clearFilterText",
    "key": "escape",
    "when": "problemsFilterFocus"
  },
  {
    "command": "problems.action.copy",
    "key": "ctrl+c",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "command": "problems.action.focusFilter",
    "key": "ctrl+f",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "command": "problems.action.focusProblemsFromFilter",
    "key": "ctrl+down",
    "when": "problemsFilterFocus"
  },
  {
    "command": "problems.action.open",
    "key": "enter",
    "when": "problemFocus"
  },
  {
    "command": "problems.action.openToSide",
    "key": "ctrl+enter",
    "when": "problemFocus"
  },
  {
    "command": "quickInput.first",
    "key": "ctrl+alt+home",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.first",
    "key": "ctrl+home",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.last",
    "key": "ctrl+alt+end",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.last",
    "key": "ctrl+end",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.next",
    "key": "ctrl+down",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.next",
    "key": "down",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.nextSeparator",
    "key": "ctrl+alt+down",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.nextSeparatorWithQuickAccessFallback",
    "key": "alt+down",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pageNext",
    "key": "ctrl+alt+pagedown",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pageNext",
    "key": "ctrl+pagedown",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pageNext",
    "key": "alt+pagedown",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pageNext",
    "key": "pagedown",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pagePrevious",
    "key": "ctrl+alt+pageup",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pagePrevious",
    "key": "ctrl+pageup",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pagePrevious",
    "key": "alt+pageup",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.pagePrevious",
    "key": "pageup",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.previous",
    "key": "ctrl+up",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.previous",
    "key": "up",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.previousSeparator",
    "key": "ctrl+alt+up",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.previousSeparatorWithQuickAccessFallback",
    "key": "alt+up",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "command": "revealFileInOS",
    "key": "shift+alt+r",
    "when": "!editorFocus"
  },
  {
    "command": "revealReference",
    "key": "enter",
    "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused"
  },
  {
    "command": "scm.acceptInput",
    "key": "ctrl+enter",
    "when": "scmRepository"
  },
  {
    "command": "scm.clearInput",
    "key": "escape",
    "when": "scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "scm.forceViewNextCommit",
    "key": "alt+down",
    "when": "scmRepository"
  },
  {
    "command": "scm.forceViewPreviousCommit",
    "key": "alt+up",
    "when": "scmRepository"
  },
  {
    "command": "scm.viewNextCommit",
    "key": "down",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "scm.viewPreviousCommit",
    "key": "up",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "command": "search.action.cancel",
    "key": "escape",
    "when": "listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0'"
  },
  {
    "command": "search.action.copyMatch",
    "key": "ctrl+c",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "command": "search.action.copyPath",
    "key": "shift+alt+c",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "command": "search.action.openResult",
    "key": "enter",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "search.action.openResultToSide",
    "key": "ctrl+enter",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "search.action.remove",
    "key": "delete",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "search.action.replaceAll",
    "key": "ctrl+alt+enter",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "command": "search.action.restrictSearchToFolder",
    "key": "shift+alt+f",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "command": "search.focus.nextInputBox",
    "key": "ctrl+down",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "command": "search.focus.previousInputBox",
    "key": "ctrl+up",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "command": "settings.action.focusLevelUp",
    "key": "escape",
    "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
  },
  {
    "command": "settings.action.focusSettingControl",
    "key": "enter",
    "when": "inSettingsEditor && settingRowFocus"
  },
  {
    "command": "settings.action.focusSettingsFromSearch",
    "key": "down",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "command": "settings.action.focusSettingsList",
    "key": "enter",
    "when": "inSettingsEditor && settingsTocRowFocus"
  },
  {
    "command": "settings.action.focusTOC",
    "key": "left",
    "when": "inSettingsEditor && settingRowFocus"
  },
  {
    "command": "toggleSearchCaseSensitive",
    "key": "alt+c",
    "when": "searchViewletFocus"
  },
  {
    "command": "toggleSearchPreserveCase",
    "key": "alt+p",
    "when": "searchViewletFocus"
  },
  {
    "command": "toggleSearchRegex",
    "key": "alt+r",
    "when": "searchViewletFocus"
  },
  {
    "command": "toggleSearchWholeWord",
    "key": "alt+w",
    "when": "searchViewletFocus"
  },
  {
    "command": "widgetNavigation.focusNext",
    "key": "ctrl+down",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "command": "widgetNavigation.focusPrevious",
    "key": "ctrl+up",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
  },
  {
    "command": "workbench.action.chat.cancel",
    "key": "alt+backspace"
  },
  {
    "command": "workbench.action.chat.focusInput",
    "key": "ctrl+down",
    "when": "inChat && !inChatInput && !quickChatHasFocus"
  },
  {
    "command": "workbench.action.chat.focusInput",
    "key": "ctrl+up",
    "when": "inChat && quickChatHasFocus && !inChatInput"
  },
  {
    "command": "workbench.action.chat.remove",
    "key": "delete",
    "when": "inChat && !inChatInput && chatLocation != 'editing-session'"
  },
  {
    "command": "workbench.action.chat.sendToChatEditing",
    "key": "ctrl+alt+enter",
    "when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'"
  },
  {
    "command": "workbench.action.chat.sendToNewChat",
    "key": "ctrl+shift+enter",
    "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
  },
  {
    "command": "workbench.action.chat.undoEdits",
    "key": "delete",
    "when": "inChat && !inChatInput && chatLocation == 'editing-session'"
  },
  {
    "command": "workbench.action.closeQuickOpen",
    "key": "shift+escape",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.closeQuickOpen",
    "key": "escape",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.editorDictation.start",
    "key": "ctrl+alt+v",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "command": "workbench.action.files.newUntitledFile",
    "key": "ctrl+n"
  },
  {
    "command": "workbench.action.files.openFile",
    "key": "ctrl+o",
    "when": "true"
  },
  {
    "command": "workbench.action.files.openFileFolder",
    "key": "ctrl+o",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "command": "workbench.action.files.openFolderViaWorkspace",
    "key": "ctrl+o",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "command": "workbench.action.files.openLocalFile",
    "key": "ctrl+o",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "workbench.action.files.save",
    "key": "ctrl+s"
  },
  {
    "command": "workbench.action.files.saveAs",
    "key": "ctrl+shift+s"
  },
  {
    "command": "workbench.action.files.saveLocalFile",
    "key": "ctrl+shift+s",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "ctrl+shift+f"
  },
  {
    "command": "workbench.action.interactivePlayground.arrowDown",
    "key": "down",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.interactivePlayground.arrowUp",
    "key": "up",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.interactivePlayground.pageDown",
    "key": "pagedown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.interactivePlayground.pageUp",
    "key": "pageup",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "command": "workbench.action.moveEditorLeftInGroup",
    "key": "ctrl+shift+pageup"
  },
  {
    "command": "workbench.action.moveEditorRightInGroup",
    "key": "ctrl+shift+pagedown"
  },
  {
    "command": "workbench.action.moveEditorToNextGroup",
    "key": "ctrl+alt+right"
  },
  {
    "command": "workbench.action.moveEditorToPreviousGroup",
    "key": "ctrl+alt+left"
  },
  {
    "command": "workbench.action.navigateForward",
    "key": "alt+right",
    "when": "canNavigateForward"
  },
  {
    "command": "workbench.action.newWindow",
    "key": "ctrl+shift+n"
  },
  {
    "command": "workbench.action.nextEditor",
    "key": "ctrl+shift+]"
  },
  {
    "command": "workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "workbench.action.previousEditor",
    "key": "ctrl+shift+["
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "key": "ctrl+shift+tab",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "key": "ctrl+tab",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "command": "workbench.action.quickOpenView",
    "key": "ctrl+q"
  },
  {
    "command": "workbench.action.remote.showMenu",
    "key": "ctrl+alt+o"
  },
  {
    "command": "workbench.action.showCommands",
    "key": "ctrl+shift+p"
  },
  {
    "command": "workbench.action.splitEditor",
    "key": "ctrl+\\"
  },
  {
    "command": "workbench.action.terminal.chat.close",
    "key": "escape",
    "when": "terminalChatFocus && terminalChatVisible || terminalChatVisible && terminalFocus"
  },
  {
    "command": "workbench.action.terminal.chat.insertCommand",
    "key": "ctrl+alt+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "workbench.action.terminal.chat.insertCommand",
    "key": "alt+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "workbench.action.terminal.chat.insertFirstCommand",
    "key": "ctrl+alt+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "workbench.action.terminal.chat.insertFirstCommand",
    "key": "alt+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "workbench.action.terminal.chat.runCommand",
    "key": "ctrl+enter",
    "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
  },
  {
    "command": "workbench.action.terminal.chat.runFirstCommand",
    "key": "ctrl+enter",
    "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
  },
  {
    "command": "workbench.action.terminal.clearSelection",
    "key": "escape",
    "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "command": "workbench.action.terminal.copyAndClearSelection",
    "key": "ctrl+c",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "command": "workbench.action.terminal.copySelection",
    "key": "ctrl+shift+c",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "command": "workbench.action.terminal.findNext",
    "key": "shift+enter",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.findPrevious",
    "key": "enter",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusFind",
    "key": "ctrl+f",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "ctrl+pagedown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "alt+down",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "alt+right",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "ctrl+pageup",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.focusPreviousPane",
    "key": "alt+up",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusPreviousPane",
    "key": "alt+left",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusTabs",
    "key": "ctrl+shift+\\",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "workbench.action.terminal.hideFind",
    "key": "shift+escape",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.hideFind",
    "key": "escape",
    "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.killActiveTab",
    "key": "delete",
    "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "workbench.action.terminal.paste",
    "key": "ctrl+shift+v",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.paste",
    "key": "ctrl+v",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.scrollDown",
    "key": "ctrl+alt+pagedown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollDownPage",
    "key": "shift+pagedown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollToBottom",
    "key": "ctrl+end",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollToTop",
    "key": "ctrl+home",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollUp",
    "key": "ctrl+alt+pageup",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollUpPage",
    "key": "shift+pageup",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.selectToNextCommand",
    "key": "ctrl+shift+down",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.selectToPreviousCommand",
    "key": "ctrl+shift+up",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "args": {
      "text": "\b"
    },
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+backspace",
    "when": "terminalFocus && terminalShellType == 'cmd'"
  },
  {
    "command": "workbench.action.terminal.sizeToContentWidth",
    "key": "alt+z",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "key": "alt+c",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.toggleFindRegex",
    "key": "alt+r",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "key": "alt+w",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "command": "workbench.action.toggleAuxiliaryBar",
    "key": "ctrl+alt+b"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "shift+cmd+b"
  },
  {
    "command": "workbench.action.zoomIn",
    "key": "ctrl+numpad_add"
  },
  {
    "command": "workbench.action.zoomIn",
    "key": "ctrl+shift+="
  },
  {
    "command": "workbench.action.zoomIn",
    "key": "ctrl+="
  },
  {
    "command": "workbench.action.zoomOut",
    "key": "ctrl+numpad_subtract"
  },
  {
    "command": "workbench.action.zoomOut",
    "key": "ctrl+shift+-"
  },
  {
    "command": "workbench.action.zoomOut",
    "key": "ctrl+-"
  },
  {
    "command": "workbench.action.zoomReset",
    "key": "ctrl+numpad0"
  },
  {
    "command": "workbench.banner.focusBanner",
    "key": "escape",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.banner.focusNextAction",
    "key": "down",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.banner.focusNextAction",
    "key": "right",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.banner.focusPreviousAction",
    "key": "up",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.banner.focusPreviousAction",
    "key": "left",
    "when": "bannerFocused"
  },
  {
    "command": "workbench.statusBar.clearFocus",
    "key": "escape",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusFirst",
    "key": "home",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusLast",
    "key": "end",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusNext",
    "key": "down",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusNext",
    "key": "right",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusPrevious",
    "key": "up",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.statusBar.focusPrevious",
    "key": "left",
    "when": "statusBarFocused"
  },
  {
    "command": "workbench.view.debug",
    "key": "ctrl+shift+d",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "command": "workbench.view.explorer",
    "key": "ctrl+shift+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "workbench.view.extensions",
    "key": "ctrl+shift+x",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "command": "workbench.view.search",
    "key": "ctrl+shift+f",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "command": "breadcrumbs.focusNextWithPicker",
    "key": "ctrl+right",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "breadcrumbs.focusPreviousWithPicker",
    "key": "ctrl+left",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "breadcrumbs.selectEditor",
    "key": "escape",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "editor.action.inlineSuggest.jump",
    "key": "tab",
    "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "command": "list.find.replInputFocus",
    "key": "ctrl+alt+f",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "command": "notebook.cell.nullAction",
    "key": "down",
    "when": "notebookOutputInputFocused"
  },
  {
    "command": "notebook.cell.nullAction",
    "key": "up",
    "when": "notebookOutputInputFocused"
  },
  {
    "command": "notebook.cell.output.selectAll",
    "key": "ctrl+a",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "workbench.action.debug.nextConsole",
    "key": "ctrl+pagedown",
    "when": "inDebugRepl"
  },
  {
    "command": "workbench.action.debug.prevConsole",
    "key": "ctrl+pageup",
    "when": "inDebugRepl"
  },
  {
    "command": "workbench.action.terminal.acceptSelectedSuggestion",
    "key": "tab",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
    "key": "enter",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'"
  },
  {
    "command": "workbench.action.terminal.hideSuggestWidget",
    "key": "escape",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.requestCompletions",
    "key": "ctrl+space",
    "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && terminalShellIntegrationEnabled"
  },
  {
    "command": "workbench.action.terminal.selectNextPageSuggestion",
    "key": "pagedown",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.selectNextSuggestion",
    "key": "down",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.selectPrevPageSuggestion",
    "key": "pageup",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "key": "up",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
  },
  {
    "command": "debug.toggleBreakpoint",
    "key": "space",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "command": "interactive.history.focus",
    "key": "ctrl+up",
    "when": "isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
  },
  {
    "command": "notebook.cell.quitEdit",
    "key": "escape",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "command": "repl.input.focus",
    "key": "alt+home alt+home",
    "when": "mostRecentReplEditor"
  },
  {
    "command": "filesExplorer.paste",
    "key": "ctrl+v",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "shift+delete",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "delete",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "editor.closeCallHierarchy",
    "key": "escape",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "command": "editor.closeTypeHierarchy",
    "key": "escape",
    "when": "typeHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "filesExplorer.cancelCut",
    "key": "escape",
    "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "ctrl+c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "ctrl+x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.openFilePreserveFocus",
    "key": "space",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "firstCompressedFolder",
    "key": "home",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "inlineChat.acceptChanges",
    "key": "ctrl+enter",
    "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatVisible && config.inlineChat.mode != 'preview'"
  },
  {
    "command": "lastCompressedFolder",
    "key": "end",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "moveFileToTrash",
    "key": "delete",
    "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "nextCompressedFolder",
    "key": "right",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "previousCompressedFolder",
    "key": "left",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "remote.tunnel.closeInline",
    "key": "delete",
    "when": "tunnelCloseable && tunnelViewFocus"
  },
  {
    "command": "remote.tunnel.copyAddressInline",
    "key": "ctrl+c",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "command": "closeReferenceSearch",
    "key": "shift+escape",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "command": "closeReferenceSearch",
    "key": "escape",
    "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus"
  },
  {
    "command": "list.stickyScroll.collapse",
    "key": "left",
    "when": "treestickyScrollFocused"
  },
  {
    "command": "list.stickyScrollselect",
    "key": "enter",
    "when": "treestickyScrollFocused"
  },
  {
    "command": "list.stickyScrolltoggleExpand",
    "key": "space",
    "when": "treestickyScrollFocused"
  },
  {
    "command": "notifications.hideList",
    "key": "escape",
    "when": "notificationCenterVisible"
  },
  {
    "command": "quickInput.acceptInBackground",
    "key": "ctrl+alt+right",
    "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.acceptInBackground",
    "key": "ctrl+right",
    "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.acceptInBackground",
    "key": "alt+right",
    "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
  },
  {
    "command": "quickInput.acceptInBackground",
    "key": "right",
    "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
  },
  {
    "command": "workbench.action.quickInputBack",
    "key": "alt+left",
    "when": "inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "key": "ctrl+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "key": "ctrl+p",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "key": "ctrl+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "workbench.action.quickOpenNavigateNextInViewPicker",
    "key": "ctrl+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "key": "ctrl+shift+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+p",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "key": "ctrl+shift+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
    "key": "ctrl+shift+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "workbench.action.reloadWindow",
    "key": "ctrl+r",
    "when": "isDevelopment"
  },
  {
    "command": "workbench.action.terminal.searchWorkspace",
    "key": "ctrl+shift+f",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "command": "notifications.hideToasts",
    "key": "escape",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "command": "workbench.action.chat.stopReadChatItemAloud",
    "key": "escape",
    "when": "scopedChatSynthesisInProgress"
  },
  {
    "command": "workbench.action.editorDictation.stop",
    "key": "escape",
    "when": "editorDictation.inProgress"
  },
  {
    "command": "markdown.showPreview",
    "key": "ctrl+shift+v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "remote-wsl.revealInExplorer",
    "key": "shift+alt+r",
    "when": "editorFocus && remoteName == 'wsl'"
  },
  {
    "command": "chat.inlineResourceAnchor.openToSide",
    "key": "ctrl+enter",
    "when": "chatAttachmentResource"
  },
  {
    "command": "hideCodeActionWidget",
    "key": "shift+escape",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "hideCodeActionWidget",
    "key": "escape",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "previewSelectedCodeAction",
    "key": "ctrl+enter",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectNextCodeAction",
    "key": "ctrl+down",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectNextCodeAction",
    "key": "down",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "ctrl+up",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "up",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "diffEditor.exitCompareMove",
    "key": "escape",
    "when": "comparingMovedCode"
  },
  {
    "command": "-editor.action.addCommentLine",
    "key": "ctrl+k ctrl+c",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.editor.changeLanguageMode",
    "key": "ctrl+k m",
    "when": "!notebookEditorFocused"
  },
  {
    "command": "-workbench.action.addComment",
    "key": "ctrl+k ctrl+alt+c",
    "when": "activeCursorHasCommentingRange"
  },
  {
    "command": "-editor.action.nextCommentingRange",
    "key": "ctrl+k ctrl+alt+down",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "command": "-editor.action.previousCommentingRange",
    "key": "ctrl+k ctrl+alt+up",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "command": "-editor.createFoldingRangeFromSelection",
    "key": "ctrl+k ctrl+,",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.debug.action.showDebugHover",
    "key": "ctrl+k ctrl+i",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "command": "-editor.action.defineKeybinding",
    "key": "ctrl+k ctrl+k",
    "when": "resource == 'vscode-userdata:/c%3A/Users/keerad/AppData/Roaming/Code/User/keybindings.json'"
  },
  {
    "command": "-workbench.files.action.focusOpenEditorsView",
    "key": "ctrl+k e",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "command": "-workbench.files.action.compareWithClipboard",
    "key": "ctrl+k c"
  },
  {
    "command": "-workbench.files.action.compareWithSaved",
    "key": "ctrl+k d"
  },
  {
    "command": "-copyRelativeFilePath",
    "key": "ctrl+k ctrl+shift+c",
    "when": "!editorFocus"
  },
  {
    "command": "-copyRelativeFilePath",
    "key": "ctrl+k ctrl+shift+c",
    "when": "editorFocus"
  },
  {
    "command": "-workbench.action.files.openFolder",
    "key": "ctrl+k ctrl+o",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "command": "-workbench.action.files.saveWithoutFormatting",
    "key": "ctrl+k ctrl+shift+s"
  },
  {
    "command": "-workbench.action.showAllEditors",
    "key": "ctrl+k ctrl+p"
  },
  {
    "command": "-editor.foldAll",
    "key": "ctrl+k ctrl+0",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllBlockComments",
    "key": "ctrl+k ctrl+/",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllExcept",
    "key": "ctrl+k ctrl+-",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllMarkerRegions",
    "key": "ctrl+k ctrl+8",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel1",
    "key": "ctrl+k ctrl+1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel2",
    "key": "ctrl+k ctrl+2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel3",
    "key": "ctrl+k ctrl+3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel4",
    "key": "ctrl+k ctrl+4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel5",
    "key": "ctrl+k ctrl+5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel6",
    "key": "ctrl+k ctrl+6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel7",
    "key": "ctrl+k ctrl+7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldRecursively",
    "key": "ctrl+k ctrl+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.formatSelection",
    "key": "ctrl+k ctrl+f",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-git.revertSelectedRanges",
    "key": "ctrl+k ctrl+r",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "-git.stageSelectedRanges",
    "key": "ctrl+k ctrl+alt+s",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "-git.unstageSelectedRanges",
    "key": "ctrl+k ctrl+n",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "-workbench.action.navigateToLastEditLocation",
    "key": "ctrl+k ctrl+q"
  },
  {
    "command": "-workbench.action.keybindingsReference",
    "key": "ctrl+k ctrl+r"
  },
  {
    "command": "-inlineChat.startWithCurrentLine",
    "key": "ctrl+k i",
    "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
  },
  {
    "command": "-markdown.showPreviewToSide",
    "key": "ctrl+k v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "key": "ctrl+k ctrl+d",
    "when": "editorFocus"
  },
  {
    "command": "-notebook.cell.collapseCellInput",
    "key": "ctrl+k ctrl+c",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "command": "-notebook.cell.collapseCellOutput",
    "key": "ctrl+k t",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.cell.expandCellInput",
    "key": "ctrl+k ctrl+c",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "command": "-notebook.cell.expandCellOutput",
    "key": "ctrl+k t",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "command": "-notebook.cell.split",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.toggleOutputScrolling",
    "key": "ctrl+k y",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "command": "-notifications.showList",
    "key": "ctrl+k ctrl+shift+n"
  },
  {
    "command": "-editor.action.revealDefinitionAside",
    "key": "ctrl+k f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.revealDefinitionAside",
    "key": "ctrl+k ctrl+f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "command": "-workbench.action.selectTheme",
    "key": "ctrl+k ctrl+t"
  },
  {
    "command": "-workbench.action.openGlobalKeybindings",
    "key": "ctrl+k ctrl+s"
  },
  {
    "command": "-editor.action.removeCommentLine",
    "key": "ctrl+k ctrl+u",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.removeManualFoldingRanges",
    "key": "ctrl+k ctrl+.",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.selectFromAnchorToCursor",
    "key": "ctrl+k ctrl+k",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "command": "-editor.action.setSelectionAnchor",
    "key": "ctrl+k ctrl+b",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.showHover",
    "key": "ctrl+k ctrl+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.terminal.focusHover",
    "key": "ctrl+k ctrl+i",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-editor.toggleFold",
    "key": "ctrl+k ctrl+l",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.toggleFoldRecursively",
    "key": "ctrl+k ctrl+shift+l",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.trimTrailingWhitespace",
    "key": "ctrl+k ctrl+x",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.unfoldAll",
    "key": "ctrl+k ctrl+j",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllExcept",
    "key": "ctrl+k ctrl+=",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllMarkerRegions",
    "key": "ctrl+k ctrl+9",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldRecursively",
    "key": "ctrl+k ctrl+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-workbench.action.closeAllGroups",
    "key": "ctrl+k ctrl+shift+w"
  },
  {
    "command": "-workbench.action.closeAllEditors",
    "key": "ctrl+k ctrl+w"
  },
  {
    "command": "-workbench.action.closeEditorsInGroup",
    "key": "ctrl+k w"
  },
  {
    "command": "-workbench.action.closeUnmodifiedEditors",
    "key": "ctrl+k u"
  },
  {
    "command": "-workbench.action.copyEditorToNewWindow",
    "key": "ctrl+k o",
    "when": "activeEditor"
  },
  {
    "command": "-workbench.action.focusAboveGroup",
    "key": "ctrl+k ctrl+up"
  },
  {
    "command": "-workbench.action.focusBelowGroup",
    "key": "ctrl+k ctrl+down"
  },
  {
    "command": "-workbench.action.focusLeftGroup",
    "key": "ctrl+k ctrl+left"
  },
  {
    "command": "-workbench.action.focusRightGroup",
    "key": "ctrl+k ctrl+right"
  },
  {
    "command": "-workbench.action.joinEditorInGroup",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "sideBySideEditorActive"
  },
  {
    "command": "-workbench.action.keepEditor",
    "key": "ctrl+k enter"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupDown",
    "key": "ctrl+k down"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupLeft",
    "key": "ctrl+k left"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupRight",
    "key": "ctrl+k right"
  },
  {
    "command": "-workbench.action.moveActiveEditorGroupUp",
    "key": "ctrl+k up"
  },
  {
    "command": "-workbench.action.nextEditorInGroup",
    "key": "ctrl+k ctrl+pagedown"
  },
  {
    "command": "-workbench.action.previousEditorInGroup",
    "key": "ctrl+k ctrl+pageup"
  },
  {
    "command": "-workbench.action.pinEditor",
    "key": "ctrl+k shift+enter",
    "when": "!activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.splitEditorDown",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.splitEditorInGroup",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "command": "-workbench.action.splitEditorLeft",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.splitEditorOrthogonal",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.splitEditorRight",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.splitEditorUp",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "key": "ctrl+k ctrl+m",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "command": "-workbench.action.toggleZenMode",
    "key": "ctrl+k z",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "command": "-workbench.action.unpinEditor",
    "key": "ctrl+k shift+enter",
    "when": "activeEditorIsPinned"
  },
  {
    "command": "-workbench.action.closeFolder",
    "key": "ctrl+k f",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "command": "-keybindings.editor.addKeybinding",
    "key": "ctrl+k ctrl+a",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "command": "-keybindings.editor.defineWhenExpression",
    "key": "ctrl+k ctrl+e",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "command": "-list.showHover",
    "key": "ctrl+k ctrl+i",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "-notebook.cell.chat.start",
    "key": "ctrl+k i",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-saveAll",
    "key": "ctrl+k s"
  },
  {
    "command": "-togglePeekWidgetFocus",
    "key": "ctrl+k f2",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-views.moveViewDown",
    "key": "ctrl+k down",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewLeft",
    "key": "ctrl+k left",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewRight",
    "key": "ctrl+k right",
    "when": "focusedView != ''"
  },
  {
    "command": "-views.moveViewUp",
    "key": "ctrl+k up",
    "when": "focusedView != ''"
  },
  {
    "command": "-workbench.action.compareEditor.openSide",
    "key": "ctrl+k shift+o",
    "when": "inDiffEditor"
  },
  {
    "command": "-workbench.action.files.copyPathOfActiveFile",
    "key": "ctrl+k p"
  },
  {
    "command": "-workbench.action.files.openLocalFolder",
    "key": "ctrl+k ctrl+o",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "-workbench.action.files.revealActiveFileInWindows",
    "key": "ctrl+k r"
  },
  {
    "command": "-editor.action.deleteLines",
    "key": "ctrl+shift+k",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.accessibilityHelpConfigureKeybindings",
    "key": "alt+k",
    "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
  },
  {
    "command": "-keybindings.editor.recordSearchKeys",
    "key": "alt+k",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "command": "-workbench.action.chat.newChat",
    "key": "ctrl+l",
    "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
  },
  {
    "command": "-workbench.action.chat.newEditSession",
    "key": "ctrl+l",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
  },
  {
    "command": "-expandLineSelection",
    "key": "ctrl+l",
    "when": "textInputFocus"
  },
  {
    "command": "-notebook.centerActiveCell",
    "key": "ctrl+l",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.selectAllFindMatches",
    "key": "ctrl+shift+l",
    "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-selectAllSearchEditorMatches",
    "key": "ctrl+shift+l",
    "when": "inSearchEditor"
  },
  {
    "command": "-toggleSearchEditorContextLines",
    "key": "alt+l",
    "when": "inSearchEditor"
  },
  {
    "command": "-editor.action.selectHighlights",
    "key": "ctrl+shift+l",
    "when": "editorFocus"
  },
  {
    "command": "-testing.debugLastRun",
    "key": "ctrl+; ctrl+l"
  },
  {
    "command": "-testing.reRunLastRun",
    "key": "ctrl+; l"
  },
  {
    "command": "-testing.coverageLastRun",
    "key": "ctrl+; ctrl+shift+l"
  },
  {
    "command": "-addCursorsAtSearchResults",
    "key": "ctrl+shift+l",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "command": "-toggleFindInSelection",
    "key": "alt+l",
    "when": "editorFocus"
  },
  {
    "command": "-workbench.action.quickchat.toggle",
    "key": "ctrl+shift+alt+l",
    "when": "chatIsEnabled"
  },
  {
    "command": "-breadcrumbs.focus",
    "key": "ctrl+shift+;",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "command": "-testing.debugAll",
    "key": "ctrl+; ctrl+a"
  },
  {
    "command": "-testing.debugFailTests",
    "key": "ctrl+; ctrl+e"
  },
  {
    "command": "-testing.debugAtCursor",
    "key": "ctrl+; ctrl+c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.debugCurrentFile",
    "key": "ctrl+; ctrl+f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.openOutputPeek",
    "key": "ctrl+; ctrl+m"
  },
  {
    "command": "-testing.refreshTests",
    "key": "ctrl+; ctrl+r",
    "when": "testing.canRefresh"
  },
  {
    "command": "-testing.reRunFailTests",
    "key": "ctrl+; e"
  },
  {
    "command": "-testing.runAll",
    "key": "ctrl+; a"
  },
  {
    "command": "-testing.coverageAll",
    "key": "ctrl+; ctrl+shift+a"
  },
  {
    "command": "-testing.runAtCursor",
    "key": "ctrl+; c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.coverageAtCursor",
    "key": "ctrl+; ctrl+shift+c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.runCurrentFile",
    "key": "ctrl+; f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.coverageCurrentFile",
    "key": "ctrl+; ctrl+shift+f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.showMostRecentOutput",
    "key": "ctrl+; ctrl+o",
    "when": "testing.hasAnyResults"
  },
  {
    "command": "-testing.toggleInlineCoverage",
    "key": "ctrl+; ctrl+shift+i"
  },
  {
    "command": "-testing.toggleInlineTestOutput",
    "key": "ctrl+; ctrl+i"
  },
  {
    "command": "-testing.cancelRun",
    "key": "ctrl+; ctrl+x"
  },
  {
    "command": "-notebook.cell.joinBelow",
    "key": "alt+win+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-notebook.cell.joinAbove",
    "key": "shift+alt+win+j",
    "when": "notebookEditorFocused"
  },
  {
    "command": "-workbench.action.togglePanel",
    "key": "ctrl+j"
  },
  {
    "command": "-workbench.action.search.toggleQueryDetails",
    "key": "ctrl+shift+j",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "command": "-references-view.showCallHierarchy",
    "key": "shift+alt+h",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "command": "-editor.showCallHierarchy",
    "key": "shift+alt+h",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "command": "-editor.action.startFindReplaceAction",
    "key": "ctrl+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "-testing.toggleTestingPeekHistory",
    "key": "alt+h",
    "when": "testing.isPeekVisible"
  },
  {
    "command": "-editor.action.accessibilityHelpOpenHelpLink",
    "key": "alt+h",
    "when": "accessibilityHelpIsShown"
  },
  {
    "command": "-editor.showIncomingCalls",
    "key": "shift+alt+h",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "command": "-editor.showOutgoingCalls",
    "key": "shift+alt+h",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "command": "-editor.showSubtypes",
    "key": "shift+alt+h",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "command": "-editor.showSupertypes",
    "key": "shift+alt+h",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
  {
    "command": "-workbench.action.gotoLine",
    "key": "ctrl+g"
  },
  {
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "key": "ctrl+g",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "ctrl+shift+g",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+alt+g",
    "when": "terminalFocus"
  },
  {
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "key": "shift+alt+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.chat.open",
    "key": "ctrl+alt+i",
    "when": "chatPanelParticipantRegistered || chatSetupInstalled"
  },
  {
    "command": "-workbench.action.chat.openEditSession",
    "key": "ctrl+shift+i",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "command": "-workbench.action.chat.startVoiceChat",
    "key": "ctrl+i",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
  },
  {
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "key": "ctrl+i",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "command": "-workbench.action.toggleDevTools",
    "key": "ctrl+shift+i",
    "when": "isDevelopment"
  },
  {
    "command": "-inlineChat.start",
    "key": "ctrl+i",
    "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
  },
  {
    "command": "-inlineChat.startWithCurrentLine",
    "key": "ctrl+i",
    "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
  },
  {
    "command": "-workbench.action.terminal.chat.start",
    "key": "ctrl+i",
    "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+i",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "-workbench.panel.chat",
    "key": "ctrl+alt+i",
    "when": "workbench.panel.chat.view.copilot.active"
  },
  {
    "command": "-workbench.panel.chatEditing",
    "key": "ctrl+shift+i",
    "when": "workbench.panel.chat.view.edits.active"
  },
  {
    "command": "-focusSuggestion",
    "key": "ctrl+i",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-inlineChat.holdForSpeech",
    "key": "ctrl+i",
    "when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
  },
  {
    "command": "-notebook.cell.chat.start",
    "key": "ctrl+i",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "command": "-toggleSuggestionDetails",
    "key": "ctrl+i",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-workbench.action.chat.holdToVoiceChatInChatView",
    "key": "ctrl+i",
    "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
  },
  {
    "command": "-editor.action.autoFix",
    "key": "shift+alt+.",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "command": "-breadcrumbs.focusAndSelect",
    "key": "ctrl+shift+.",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+.",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "-notebook.cell.openFailureActions",
    "key": "ctrl+.",
    "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
  },
  {
    "command": "-editor.action.quickFix",
    "key": "ctrl+.",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.inPlaceReplace.down",
    "key": "ctrl+shift+.",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.terminal.showQuickFixes",
    "key": "ctrl+.",
    "when": "terminalFocus"
  },
  {
    "command": "-acceptSelectedCodeAction",
    "key": "ctrl+.",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "-breadcrumbs.toggleToOn",
    "key": "ctrl+shift+.",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "command": "-editor.changeDropType",
    "key": "ctrl+.",
    "when": "dropWidgetVisible"
  },
  {
    "command": "-editor.changePasteType",
    "key": "ctrl+.",
    "when": "pasteWidgetVisible"
  },
  {
    "command": "-problems.action.showQuickFixes",
    "key": "ctrl+.",
    "when": "problemFocus"
  },
  {
    "command": "-editor.action.inPlaceReplace.up",
    "key": "ctrl+shift+,",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.openSettings",
    "key": "ctrl+,"
  },
  {
    "command": "-notebook.cell.changeToMarkdown",
    "key": "m",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "command": "-editor.action.toggleTabFocusMode",
    "key": "ctrl+m"
  },
  {
    "command": "-workbench.actions.view.problems",
    "key": "ctrl+shift+m",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "command": "-workbench.action.focusFirstEditorGroup",
    "key": "ctrl+1"
  },
  {
    "command": "-workbench.action.moveEditorToFirstGroup",
    "key": "shift+alt+1"
  },
  {
    "command": "-editor.action.replaceOne",
    "key": "ctrl+shift+1",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "command": "-search.action.replace",
    "key": "ctrl+shift+1",
    "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAllInFile",
    "key": "ctrl+shift+1",
    "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "command": "-search.action.replaceAllInFolder",
    "key": "ctrl+shift+1",
    "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "command": "-workbench.action.openEditorAtIndex1",
    "key": "alt+1"
  },
  {
    "command": "-workbench.action.focusSecondEditorGroup",
    "key": "ctrl+2"
  },
  {
    "command": "-workbench.action.openEditorAtIndex2",
    "key": "alt+2"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+shift+2",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.focusThirdEditorGroup",
    "key": "ctrl+3"
  },
  {
    "command": "-workbench.action.openEditorAtIndex3",
    "key": "alt+3"
  },
  {
    "command": "-workbench.action.focusFourthEditorGroup",
    "key": "ctrl+4"
  },
  {
    "command": "-workbench.action.openEditorAtIndex4",
    "key": "alt+4"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "ctrl+shift+5",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.focusFifthEditorGroup",
    "key": "ctrl+5"
  },
  {
    "command": "-workbench.action.openEditorAtIndex5",
    "key": "alt+5"
  },
  {
    "command": "-workbench.action.terminal.splitActiveTab",
    "key": "ctrl+shift+5",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.focusSixthEditorGroup",
    "key": "ctrl+6"
  },
  {
    "command": "-workbench.action.openEditorAtIndex6",
    "key": "alt+6"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+shift+6",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.focusSeventhEditorGroup",
    "key": "ctrl+7"
  },
  {
    "command": "-workbench.action.openEditorAtIndex7",
    "key": "alt+7"
  },
  {
    "command": "-workbench.action.focusEighthEditorGroup",
    "key": "ctrl+8"
  },
  {
    "command": "-workbench.action.openEditorAtIndex8",
    "key": "alt+8"
  },
  {
    "command": "-workbench.action.moveEditorToLastGroup",
    "key": "shift+alt+9"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "ctrl+9"
  },
  {
    "command": "-workbench.action.openEditorAtIndex9",
    "key": "alt+9"
  },
  {
    "command": "-workbench.action.toggleEditorGroupLayout",
    "key": "shift+alt+0"
  },
  {
    "command": "-workbench.action.focusSideBar",
    "key": "ctrl+0"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "alt+0"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "ctrl+f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
  },
  {
    "command": "-editor.action.goToImplementation",
    "key": "ctrl+f12",
    "when": "editorHasImplementationProvider && editorTextFocus"
  },
  {
    "command": "-editor.action.goToReferences",
    "key": "shift+f12",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.peekDefinition",
    "key": "alt+f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.peekImplementation",
    "key": "ctrl+shift+f12",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-references-view.findReferences",
    "key": "shift+alt+f12",
    "when": "editorHasReferenceProvider"
  },
  {
    "command": "-editor.gotoNextSymbolFromResult",
    "key": "f12",
    "when": "hasSymbols"
  },
  {
    "command": "-goToNextReference",
    "key": "f12",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-goToPreviousReference",
    "key": "shift+f12",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-extension.node-debug.startWithStopOnEntry",
    "key": "f11",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
  },
  {
    "command": "-workbench.action.debug.stepInto",
    "key": "f11",
    "when": "debugState != 'inactive'"
  },
  {
    "command": "-workbench.action.debug.stepIntoTarget",
    "key": "ctrl+f11",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
  },
  {
    "command": "-workbench.action.debug.stepOut",
    "key": "shift+f11",
    "when": "debugState == 'stopped'"
  },
  {
    "command": "-workbench.action.toggleFullScreen",
    "key": "f11",
    "when": "!isIOS"
  },
  {
    "command": "-editor.action.nextCommentedRangeAction",
    "key": "alt+f10",
    "when": "activeEditorHasCommentingRange"
  },
  {
    "command": "-editor.action.previousCommentedRangeAction",
    "key": "shift+alt+f10",
    "when": "activeEditorHasCommentingRange"
  },
  {
    "command": "-extension.node-debug.startWithStopOnEntry",
    "key": "f10",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "command": "-workbench.action.debug.stepOver",
    "key": "f10",
    "when": "debugState == 'stopped'"
  },
  {
    "command": "-editor.action.showContextMenu",
    "key": "shift+f10",
    "when": "textInputFocus"
  },
  {
    "command": "-workbench.action.chat.nextFileTree",
    "key": "ctrl+f9",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.previousFileTree",
    "key": "ctrl+shift+f9",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "key": "shift+f9",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.debug.action.toggleBreakpoint",
    "key": "f9",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "command": "-settings.action.showContextMenu",
    "key": "shift+f9",
    "when": "inSettingsEditor"
  },
  {
    "command": "-editor.action.nextCommentThreadAction",
    "key": "alt+f9"
  },
  {
    "command": "-editor.action.previousCommentThreadAction",
    "key": "shift+alt+f9"
  },
  {
    "command": "-editor.action.marker.next",
    "key": "alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.nextInFiles",
    "key": "f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.prev",
    "key": "shift+alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.prevInFiles",
    "key": "shift+f8",
    "when": "editorFocus"
  },
  {
    "command": "-testing.goToNextMessage",
    "key": "alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "-testing.goToPreviousMessage",
    "key": "shift+alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "-editor.action.accessibleDiffViewer.next",
    "key": "f7",
    "when": "isInDiffEditor"
  },
  {
    "command": "-editor.action.accessibleDiffViewer.prev",
    "key": "shift+f7",
    "when": "isInDiffEditor"
  },
  {
    "command": "-editor.action.wordHighlight.next",
    "key": "f7",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "command": "-editor.action.wordHighlight.prev",
    "key": "shift+f7",
    "when": "editorTextFocus && hasWordHighlights"
  },
  {
    "command": "-inlineChat.moveToNextHunk",
    "key": "f7",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "-inlineChat.moveToPreviousHunk",
    "key": "shift+f7",
    "when": "inlineChatHasProvider && inlineChatVisible"
  },
  {
    "command": "-workbench.action.debug.pause",
    "key": "f6",
    "when": "debugState == 'running'"
  },
  {
    "command": "-editor.action.accessibleViewDisableHint",
    "key": "alt+f6",
    "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
  },
  {
    "command": "-workbench.action.focusNextPart",
    "key": "f6"
  },
  {
    "command": "-workbench.action.focusPreviousPart",
    "key": "shift+f6"
  },
  {
    "command": "-chatEditor.action.navigateNext",
    "key": "alt+f5",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "command": "-chatEditor.action.navigatePrevious",
    "key": "shift+alt+f5",
    "when": "chat.hasEditorModifications && editorFocus || chat.hasNotebookEditorModifications && editorFocus"
  },
  {
    "command": "-workbench.action.debug.continue",
    "key": "f5",
    "when": "debugState == 'stopped'"
  },
  {
    "command": "-workbench.action.debug.disconnect",
    "key": "shift+f5",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "command": "-workbench.action.debug.restart",
    "key": "ctrl+shift+f5",
    "when": "inDebugMode"
  },
  {
    "command": "-workbench.action.debug.start",
    "key": "f5",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "command": "-workbench.action.debug.run",
    "key": "ctrl+f5",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "command": "-workbench.action.debug.stop",
    "key": "shift+f5",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "command": "-workbench.action.compareEditor.nextChange",
    "key": "alt+f5",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "-workbench.action.editor.nextChange",
    "key": "alt+f5",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "-workbench.action.compareEditor.previousChange",
    "key": "shift+alt+f5",
    "when": "textCompareEditorVisible"
  },
  {
    "command": "-workbench.action.editor.previousChange",
    "key": "shift+alt+f5",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "-debug.openView",
    "key": "ctrl+f5",
    "when": "!debuggersAvailable"
  },
  {
    "command": "-debug.openView",
    "key": "f5",
    "when": "!debuggersAvailable"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "alt+f4"
  },
  {
    "command": "-references-view.next",
    "key": "f4",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "command": "-references-view.prev",
    "key": "shift+f4",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "command": "-search.action.focusNextSearchResult",
    "key": "f4",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-search.action.focusPreviousSearchResult",
    "key": "shift+f4",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-workbench.action.terminal.killEditor",
    "key": "ctrl+f4",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.closeActiveEditor",
    "key": "ctrl+f4"
  },
  {
    "command": "-goToNextReference",
    "key": "f4",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-goToPreviousReference",
    "key": "shift+f4",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "command": "-workbench.action.closeGroup",
    "key": "ctrl+f4",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "command": "-editor.action.nextMatchFindAction",
    "key": "f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.nextSelectionMatchFindAction",
    "key": "ctrl+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousSelectionMatchFindAction",
    "key": "ctrl+shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.dirtydiff.next",
    "key": "alt+f3",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "-editor.action.dirtydiff.previous",
    "key": "shift+alt+f3",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "f3",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "shift+f3",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "command": "-list.find",
    "key": "f3",
    "when": "listFocus && listSupportsFind"
  },
  {
    "command": "-list.find.replInputFocus",
    "key": "f3",
    "when": "view == 'workbench.panel.repl.view'"
  },
  {
    "command": "-notebook.diff.action.next",
    "key": "alt+f3",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "command": "-notebook.diff.action.previous",
    "key": "shift+alt+f3",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
  },
  {
    "command": "-editor.action.changeAll",
    "key": "ctrl+f2",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.accessibleView",
    "key": "alt+f2"
  },
  {
    "command": "-editor.action.rename",
    "key": "f2",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.linkedEditing",
    "key": "ctrl+shift+f2",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-debug.renameWatchExpression",
    "key": "f2",
    "when": "watchExpressionsFocused"
  },
  {
    "command": "-debug.setVariable",
    "key": "f2",
    "when": "variablesFocused"
  },
  {
    "command": "-remote.tunnel.label",
    "key": "f2",
    "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "command": "-renameFile",
    "key": "f2",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-workbench.action.terminal.focusAccessibleBuffer",
    "key": "alt+f2",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.renameActiveTab",
    "key": "f2",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "command": "-editor.action.accessibilityHelp",
    "key": "alt+f1",
    "when": "!accessibilityHelpIsShown"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "f1"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "shift+alt+f1"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+o",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "ctrl+shift+o",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "ctrl+shift+o",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "command": "workbench.action.files.openFolder",
    "key": "ctrl+shift+o",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "command": "-workbench.action.tasks.build",
    "key": "ctrl+shift+b",
    "when": "taskCommandsRegistered"
  },
  {
    "command": "workbench.action.replaceInFiles",
    "key": "ctrl+shift+r"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "ctrl+shift+h"
  },
  {
    "command": "-decreaseSearchEditorContextLines",
    "key": "alt+-",
    "when": "inSearchEditor"
  },
  {
    "command": "-search.searchEditor.action.deleteFileResults",
    "key": "ctrl+shift+backspace",
    "when": "inSearchEditor"
  },
  {
    "command": "-search.action.focusQueryEditorWidget",
    "key": "escape",
    "when": "inSearchEditor"
  },
  {
    "command": "-increaseSearchEditorContextLines",
    "key": "alt+=",
    "when": "inSearchEditor"
  },
  {
    "command": "-search.action.openInEditor",
    "key": "alt+enter",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "command": "-rerunSearchEditorSearch",
    "key": "ctrl+shift+r",
    "when": "inSearchEditor"
  },
  {
    "command": "-toggleSearchEditorCaseSensitive",
    "key": "alt+c",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-toggleSearchEditorWholeWord",
    "key": "alt+w",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-toggleSearchEditorRegex",
    "key": "alt+r",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "command": "-editor.action.refactor",
    "key": "ctrl+shift+r",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-refactorPreview.apply",
    "key": "ctrl+enter",
    "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
  },
  {
    "command": "-refactorPreview.toggleCheckedState",
    "key": "space",
    "when": "listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused"
  },
  {
    "command": "-editor.action.accessibleViewAcceptInlineCompletion",
    "key": "ctrl+/",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'"
  },
  {
    "command": "-workbench.action.chat.applyInEditor",
    "key": "ctrl+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "command": "-workbench.action.chat.insertCodeBlock",
    "key": "ctrl+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput"
  },
  {
    "command": "-workbench.action.chat.runInTerminal",
    "key": "ctrl+alt+enter",
    "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat"
  },
  {
    "command": "-inlineChat.focus",
    "key": "ctrl+down",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
  },
  {
    "command": "-inlineChat.focus",
    "key": "ctrl+up",
    "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "down",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "down",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.focusNextEditor",
    "key": "ctrl+pagedown",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "up",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "up",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
  },
  {
    "command": "-notebook.focusPreviousEditor",
    "key": "ctrl+pageup",
    "when": "accessibilityModeEnabled && notebookCellEditorFocused"
  },
  {
    "command": "-editor.action.accessibleViewNext",
    "key": "alt+]",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "command": "-editor.action.accessibleViewPrevious",
    "key": "alt+[",
    "when": "accessibleViewIsShown && accessibleViewSupportsNavigation"
  },
  {
    "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand",
    "key": "alt+down",
    "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand",
    "key": "alt+up",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.focus",
    "key": "ctrl+down",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.runRecentCommand",
    "key": "ctrl+r",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.runRecentCommand",
    "key": "ctrl+alt+r",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "-workbench.action.terminal.scrollToBottomAccessibleView",
    "key": "ctrl+end",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.scrollToTopAccessibleView",
    "key": "ctrl+home",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "key": "ctrl+down",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "key": "ctrl+up",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "ctrl+e",
    "when": "accessibilityHelpIsShown"
  },
  {
    "command": "-cursorWordAccessibilityLeft",
    "key": "ctrl+left",
    "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
  },
  {
    "command": "-cursorWordAccessibilityLeftSelect",
    "key": "ctrl+shift+left",
    "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
  },
  {
    "command": "-cursorWordAccessibilityRight",
    "key": "ctrl+right",
    "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
  },
  {
    "command": "-cursorWordAccessibilityRightSelect",
    "key": "ctrl+shift+right",
    "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
  },
  {
    "command": "-cursorWordEndRight",
    "key": "ctrl+right",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "command": "-cursorWordEndRightSelect",
    "key": "ctrl+shift+right",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "command": "-cursorWordLeft",
    "key": "ctrl+left",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "command": "-cursorWordLeftSelect",
    "key": "ctrl+shift+left",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "command": "-editor.action.accessibilityHelpConfigureAssignedKeybindings",
    "key": "alt+a",
    "when": "accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings"
  },
  {
    "command": "-editor.action.accessibleViewNextCodeBlock",
    "key": "ctrl+alt+pagedown",
    "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
  },
  {
    "command": "-editor.action.accessibleViewPreviousCodeBlock",
    "key": "ctrl+alt+pageup",
    "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
  },
  {
    "command": "-inlineChat.arrowOutDown",
    "key": "ctrl+down",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
  },
  {
    "command": "-inlineChat.arrowOutUp",
    "key": "ctrl+up",
    "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
  },
  {
    "command": "-notebook.cell.chat.arrowOutDown",
    "key": "ctrl+down",
    "when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
  },
  {
    "command": "-notebook.cell.chat.arrowOutUp",
    "key": "ctrl+up",
    "when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
  },
  {
    "command": "-notebook.cell.focusChatWidget",
    "key": "ctrl+up",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "command": "-notebook.cell.focusNextChatWidget",
    "key": "ctrl+down",
    "when": "editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "command": "-search.action.focusSearchFromResults",
    "key": "ctrl+up",
    "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
  },
  {
    "command": "-workbench.action.terminal.focusAccessibleBuffer",
    "key": "ctrl+up",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+v",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+space",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "alt+space",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "shift+enter",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+alt+r",
    "when": "accessibilityModeEnabled && terminalFocus"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+e"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "key": "ctrl+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.reopenClosedEditor",
    "key": "ctrl+shift+t"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "workbench.files.action.collapseExplorerFolders",
    "key": "ctrl+shift+l"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "ctrl+shift+c",
    "when": "!terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  {
    "command": "-workbench.action.editorDictation.start",
    "key": "alt+`",
    "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
  },
  {
    "command": "-editor.fold",
    "key": "ctrl+shift+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-notebook.fold",
    "key": "ctrl+shift+[",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-notebook.unfold",
    "key": "ctrl+shift+]",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "command": "-editor.unfold",
    "key": "ctrl+shift+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-chatEditor.action.navigateNext",
    "key": "alt+f5",
    "when": "chat.hasEditorModifications && editorFocus"
  },
  {
    "command": "-chatEditor.action.navigatePrevious",
    "key": "shift+alt+f5",
    "when": "chat.hasEditorModifications && editorFocus"
  },
  {
    "command": "-workbench.action.chat.nextCodeBlock",
    "key": "ctrl+alt+pagedown",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.open",
    "key": "ctrl+alt+i",
    "when": "chatPanelParticipantRegistered"
  },
  {
    "command": "-workbench.action.chat.openEditSession",
    "key": "ctrl+shift+alt+i",
    "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
  },
  {
    "command": "-workbench.action.chat.previousCodeBlock",
    "key": "ctrl+alt+pageup",
    "when": "chatIsEnabled && inChat"
  },
  {
    "command": "-workbench.action.chat.startVoiceChat",
    "key": "ctrl+i",
    "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
  },
  {
    "command": "-workbench.action.chat.stopListening",
    "key": "escape",
    "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "command": "-workbench.action.chat.stopListeningAndSubmit",
    "key": "ctrl+i",
    "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
  },
  {
    "command": "-workbench.action.speech.stopReadAloud",
    "key": "escape",
    "when": "scopedChatSynthesisInProgress && textToSpeechInProgress"
  },
  {
    "command": "terminal.focus",
    "key": "ctrl+shift+t"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "ctrl+shift+t",
    "when": "terminal.active"
  },
  {
    "command": "-editor.action.smartSelect.shrink",
    "key": "shift+alt+left",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.toggleOvertypeInsertMode",
    "key": "insert"
  },
  {
    "command": "-workbench.action.output.toggleOutput",
    "key": "ctrl+shift+u",
    "when": "workbench.panel.output.active"
  },
  {
    "command": "-workbench.debug.action.toggleRepl",
    "key": "ctrl+shift+y",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "command": "-welcome.showNewFileEntries",
    "key": "ctrl+alt+win+n"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "ctrl+shift+w"
  },
  {
    "command": "-workbench.action.navigateBack",
    "key": "alt+left",
    "when": "canNavigateBack"
  },
  {
    "command": "-notification.acceptPrimaryAction",
    "key": "ctrl+shift+a",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "command": "-editor.action.blockComment",
    "key": "shift+alt+a",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.debug.panel.action.clearReplAction",
    "when": "focusedView == 'workbench.panel.repl.view'"
  },
  {
    "key": "cmd+k alt+cmd+c",
    "command": "-workbench.action.addComment",
    "when": "activeCursorHasCommentingRange"
  },
  {
    "key": "cmd+k alt+cmd+down",
    "command": "-editor.action.nextCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+k alt+cmd+up",
    "command": "-editor.action.previousCommentingRange",
    "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
  },
  {
    "key": "cmd+k cmd+,",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/Users/krad246/Library/Application%20Support/Code/User/keybindings.json'"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+k c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "cmd+k d",
    "command": "-workbench.files.action.compareWithSaved"
  },
  {
    "key": "cmd+k alt+cmd+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "cmd+k cmd+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+/",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+-",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+8",
    "command": "-editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k alt+cmd+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "cmd+k cmd+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "cmd+k cmd+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "cmd+k i",
    "command": "-inlineChat.startWithCurrentLine",
    "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k cmd+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "cmd+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+k cmd+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "cmd+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "cmd+k shift+cmd+\\",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "cmd+k y",
    "command": "-notebook.cell.toggleOutputScrolling",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
  },
  {
    "key": "cmd+k shift+cmd+n",
    "command": "-notifications.showList"
  },
  {
    "key": "cmd+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k cmd+f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k cmd+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "cmd+k cmd+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+.",
    "command": "-editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "cmd+k cmd+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k shift+cmd+l",
    "command": "-editor.toggleFoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+=",
    "command": "-editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+9",
    "command": "-editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k cmd+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+k shift+cmd+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "cmd+k o",
    "command": "-workbench.action.copyEditorToNewWindow",
    "when": "activeEditor"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k shift+cmd+\\",
    "command": "-workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "cmd+k enter",
    "command": "-workbench.action.keepEditor"
  },
  {
    "key": "cmd+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+k shift+cmd+left",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "cmd+k shift+cmd+right",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "cmd+k alt+cmd+right",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "cmd+k alt+cmd+left",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+k shift+cmd+\\",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+k cmd+\\",
    "command": "-workbench.action.splitEditorUp"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
  },
  {
    "key": "cmd+k z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "cmd+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "cmd+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "cmd+k cmd+a",
    "command": "-keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "cmd+k cmd+e",
    "command": "-keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-list.showHover",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "cmd+k i",
    "command": "-notebook.cell.chat.start",
    "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "cmd+k f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "cmd+k down",
    "command": "-views.moveViewDown",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+k left",
    "command": "-views.moveViewLeft",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+k right",
    "command": "-views.moveViewRight",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+k up",
    "command": "-views.moveViewUp",
    "when": "focusedView != ''"
  },
  {
    "key": "cmd+k shift+o",
    "command": "-workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "cmd+k p",
    "command": "-workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "cmd+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+cmd+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "shift+cmd+1",
    "command": "-editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "shift+cmd+1",
    "command": "-search.action.replace",
    "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+cmd+1",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+cmd+1",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "ctrl+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "ctrl+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "ctrl+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "ctrl+cmd+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "cmd+9",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "alt+cmd+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol",
    "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+cmd+f",
    "command": "-workbench.action.toggleFullScreen",
    "when": "!isIOS"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "cmd+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "shift+cmd+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationFocus || notificationToastsVisible"
  }
]
